
  /*
   * 
   * openSession() : open a database session object
   *
   * Session provides a context for database transactions and operations.
   * Each independent user should have its own Session.
   *
   * The resources required for sessions are allocated in advance. 
   * It may return an error in the callback indicating that those resources are 
   * not available.
   *
   * @param mappings Table Mappings to be validated at start of session
   * @param callback the function to call when the session is ready for use
   * @param additional parameters will be returned in the callback
   * @return nothing
   * @async
   *
   * @return a Session object.
   */
  openSession(Object mappings, Function(Object error, Session session, ...) callback, ...);
 
  /** Get all open sessions that have been created by this factory.
   *
   * @return all open sessions
   */
  Array getOpenSessions();

  /* 
   * close(): close the connection to the database
   * 
   * Close the connection to the database.
   * This ensures proper disconnection.
   * 
   * @param function to call when close is complete
   * @return nothing
   */
  close(function(Error err));

  /* registerTypeConverter 
     IMMEDIATE
     Register a converter for a SQL data type 
     If converterObject is null, *unregister* the typeConverter for this 
     data type.

     @param typeName is a column type as defined in TableMetadata
     @param converterObject is as defined in Converter
  */
  registerTypeConverter(typeName, converterObject);
