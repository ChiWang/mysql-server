set max_heap_table_size = 286720000;
create table t1 (a int primary key) engine=memory;
load data local infile 'suite/ndb/data/table_data10000.dat' into table t1 columns terminated by ' ' (a, @col2);
insert into t1 select a + 10000 from t1;;
insert into t1 select a + 10000 * 2 from t1;;
insert into t1 select a + 10000 * 2 * 2 from t1;;
insert into t1 select a + 10000 * 2 * 2 * 2 from t1;;
select count(*) from t1;
count(*)
160000
alter table t1 engine=ndbcluster comment='NDB_TABLE=NOLOGGING' partition by key() partitions 1;
create table t2 (a int primary key) engine=memory;
insert into t2 select a from t1;
the left join below should result in scanning t2 and do pk lookups in t1
explain select if(isnull(t1.a),t2.a,NULL) missed, count(*) rows from t2 left join t1 on t1.a=t2.a group by if(isnull(t1.a),t2.a,NULL);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	ALL	NULL	NULL	NULL	NULL	#	Using temporary; Using filesort
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.t2.a	#	
the result rows with missed equal to NULL should count all rows (160000)
the other rows are the failed lookups and there should not be any such
select if(isnull(t1.a),t2.a,NULL) missed, count(*) rows from t2 left join t1 on t1.a=t2.a group by if(isnull(t1.a),t2.a,NULL);
missed	rows
NULL	160000
verify that it is not possible to reinsert all rows in t1 to itself
affected rows should be zero
insert ignore into t1 select a from t1;
affected rows: 0
info: Records: 160000  Duplicates: 160000  Warnings: 0
drop table t1, t2;
