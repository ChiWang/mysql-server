create table parent (
a int primary key auto_increment,
b int not null,
c int not null,
unique(b) using hash,
index(c)) engine = ndb;
create table child (
a int primary key auto_increment,
b int not null,
c int not null,
unique(b) using hash,
index(c)) engine = ndb;
create table grandchild (
a int primary key auto_increment,
b int not null,
c int not null,
unique(b) using hash,
index(c)) engine = ndb;
alter table child add constraint fkname foreign key (a) references parent (a)
on delete cascade on update restrict;
alter table grandchild add constraint fkname foreign key (a) references child
(a) on delete cascade on update restrict;
insert into parent values (1,1,1),(2,2,2);
insert into child values (1,1,1),(2,2,2);
insert into grandchild values (1,1,1),(2,2,2);
set ndb_deferred_constraints = 0;
begin;
delete from parent where a = 1;
select * from child order by 1,2,3;
a	b	c
2	2	2
select * from grandchild order by 1,2,3;
a	b	c
2	2	2
rollback;
set ndb_deferred_constraints = 1;
begin;
delete from parent where a = 1;
select * from child order by 1,2,3;
a	b	c
1	1	1
2	2	2
select * from grandchild order by 1,2,3;
a	b	c
1	1	1
2	2	2
commit;
select * from child order by 1,2,3;
a	b	c
2	2	2
select * from grandchild order by 1,2,3;
a	b	c
2	2	2
drop table grandchild, child, parent;
