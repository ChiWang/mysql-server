# Scenario:
#  T1=({R(B)})
#  T2=({R(B), W(B), C}, HIGH_PRIORITY).
#
# Outcome: T1 must abort, T2 must commit.

CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (0);

--connect(con1,localhost,root,,test)
--connect(con2,localhost,root,,test)

--echo
--echo # On connection 1
--connection con1
START TRANSACTION;
SELECT * FROM t1 WHERE c1=0 FOR UPDATE;

--echo
--echo # On connection 2
--connection con2
START TRANSACTION HIGH_PRIORITY;
UPDATE t1 SET c1=2 WHERE c1=0;
COMMIT;

--echo
--echo # On connection 1
--connection con1
--error ER_LOCK_DEADLOCK
UPDATE t1 SET c1=1 WHERE c1=0;
--error ER_ERROR_DURING_COMMIT
COMMIT;

--connection default
--let $assert_text= 'There is a 2 in t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE t1.c1 = 2, count, 1] = 1
--source include/assert.inc

--let $assert_text= 'There is no 1 in t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE t1.c1 = 1, count, 1] = 0
--source include/assert.inc

--let $assert_text= 'There is no 0 in t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE t1.c1 = 0, count, 1] = 0
--source include/assert.inc

DROP TABLE t1;

--disconnect con1
--disconnect con2
