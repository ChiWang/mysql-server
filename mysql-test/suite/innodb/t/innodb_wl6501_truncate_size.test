# =====================  purpose  ========================================
#
# The test verifies that 'TRUNCATE TABLE' statement works fine and the
# size of .ibd file is equal to the truncated size after truncation.
#

# Valgrind would complain about memory leaks when we crash on purpose.
--source include/not_valgrind.inc
# Embedded server does not support crashing
--source include/not_embedded.inc
# Avoid CrashReporter popup on Mac
--source include/not_crashrep.inc

--source include/have_innodb_16k.inc
--source include/have_debug.inc

--disable_query_log
let $innodb_file_per_table_orig=`select @@innodb_file_per_table`;
let $innodb_file_format_orig=`select @@innodb_file_format`;
let $innodb_file_format_max_orig=`select @@innodb_file_format_max`;
--enable_query_log

set global innodb_file_per_table=on;

--disable_warnings
drop table if exists t1;
--enable_warnings

create table t1(a int not null,
 b int not null,
 c int not null,
 d blob not null,
 primary key (a),
 index (b),
 index (c,d(120)))
engine=innodb;

-- disable_query_log
-- disable_result_log
let $n_rows=500;
let $n=$n_rows;
while ($n > 0)
{
  eval insert into t1 values($n,$n,$n,repeat("a",60000));
  dec $n;
}
-- enable_result_log
-- enable_query_log
select count(*) from t1;

truncate table t1;
-- echo # Verify that 'TRUNCATE TABLE' statement works fine, which can empty a table.
select count(*) from t1;

-- echo # Check the size of .ibd file after truncation.
perl;
open F, ">>".$ENV{'MYSQLTEST_VARDIR'}.'/tmp/ibdfile.size' or die "Failed to open t1.ibd file";
my $path = $ENV{'MYSQLTEST_VARDIR'}.'/mysqld.1/data/test/t1.ibd';
my $filesize = -s $path;
printf F ("The size of t1.ibd file is %d bytes.\n", $filesize);
close F;
EOF
cat_file $MYSQLTEST_VARDIR/tmp/ibdfile.size;
remove_file $MYSQLTEST_VARDIR/tmp/ibdfile.size;

-- disable_query_log
-- disable_result_log
let $n=$n_rows;
while ($n > 0)
{
  eval insert into t1 values($n,$n,$n,repeat("a",60000));
  dec $n;
}
-- enable_result_log
-- enable_query_log
-- echo # Verify that the insertion to the table works fine after truncation.
select count(*) from t1;
drop table t1;

-- disable_query_log
eval set global innodb_file_format=$innodb_file_format_orig;
eval set global innodb_file_format_max=$innodb_file_format_max_orig;
eval set global innodb_file_per_table=$innodb_file_per_table_orig;
-- enable_query_log
