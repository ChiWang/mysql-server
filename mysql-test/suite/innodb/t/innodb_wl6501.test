#
# WL#6501: make truncate table atomic
#

--source include/have_innodb.inc

################################################################################
#
# Will test following scenarios:
# 1. Test some basic dml action involving truncate of table.
# 2. Validate size of ibd file post truncate
#    (applicable only for single tablespace).
# 3. Test that truncating reference table is blocked.
#
################################################################################

#-----------------------------------------------------------------------------
#
# create test-bed
#
let $per_table = `select @@innodb_file_per_table`;
let $format = `select @@innodb_file_format`;

set global innodb_file_per_table = on;
let $MYSQL_TMP_DIR = `select @@tmpdir`;
let $MYSQL_DATA_DIR = `select @@datadir`;
let SEARCH_FILE = $MYSQLTEST_VARDIR/log/my_restart.err;

#-----------------------------------------------------------------------------
#
# 1. Test some basic dml action involving truncate of table.
#
--echo "1. Test some basic dml action involving truncate of table."
use test;
set global innodb_file_per_table = 0;
create table t1
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
create table t2
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
--source suite/innodb/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
#
create temporary table t1
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
create temporary table t2
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
--source suite/innodb/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
#
set global innodb_file_per_table = 1;
create table t1
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
create table t2
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
--source suite/innodb/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
#
create temporary table t1
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
create temporary table t2
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc), index sec_index(c1)
        ) engine = innodb;
--source suite/innodb/include/innodb_dml_ops.inc
drop table t1;
drop table t2;

#-----------------------------------------------------------------------------
#
# 2. Validate size of ibd file post truncate
#    (applicable only for single tablespace).
#
--echo "Validate size of ibd file post truncate"
--echo "(applicable only for single tablespace)".
use test;
set global innodb_file_per_table = 1;
create table t1
	(i int, f float, c char(100)) engine = innodb;
select count(*) from t1;
#
--echo "Size of ibd file before loading";
--exec ls -l $MYSQL_DATA_DIR/test/t1.ibd | cut -f 5 -d " "
#
delimiter |;
create procedure populate_t1()
begin
        declare i int default 1;
        while (i <= 200) do
                insert into t1 values (i, 1.1, 'nnnnnnnnnnnnnnnnnnnnnn');
                set i = i + 1;
        end while;
end|
delimiter ;|
#
begin;
call populate_t1();
commit;
#
--echo "Size of ibd file after loading";
--exec ls -l $MYSQL_DATA_DIR/test/t1.ibd | cut -f 5 -d " "
#
select count(*) from t1;
truncate table t1;
#
--echo "Size of ibd file after truncating";
--exec ls -l $MYSQL_DATA_DIR/test/t1.ibd | cut -f 5 -d " "
#
drop table t1;
drop procedure populate_t1;

#-----------------------------------------------------------------------------
#
# 3. Test that truncating reference table is blocked.
#
use test;
#
create table master
	(i int, f float, c char(100),
	 primary key pk(i), index fidx(f))
	engine = innodb;
#
create table slave
	(i int, j int,
	 primary key pk(i),
	 foreign key fk(j) references master(i))
	engine = innodb;
#
insert into master values
	(1, 1.1, 'a'), (2, 2.2, 'b'), (3, 3.3, 'c'),
	(4, 4.4, 'd'), (5, 5.5, 'e');
#
insert into slave values
	(101, 1), (202, 3), (303, 5);
#
select * from master;
select * from slave;
#
--error ER_TRUNCATE_ILLEGAL_FK
truncate table master;
#
drop table slave;
drop table master;

#-----------------------------------------------------------------------------
#
# remove test-bed
#
eval set global innodb_file_format = $format;
eval set global innodb_file_per_table = $per_table;

