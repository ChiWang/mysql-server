# -----------------------------------------------------------------------
# Tests for the performance schema stored program instrumentation.
# -----------------------------------------------------------------------

--source include/not_embedded.inc
--source include/have_perfschema.inc

TRUNCATE TABLE performance_schema.events_statements_summary_by_program;
TRUNCATE TABLE performance_schema.events_statements_history_long;

--echo ###########################################
--echo # Quering PS statement summary and history #
--echo ########################################### 

--source suite/perfschema/include/program_setup.inc
# Stored programs donot get into PS tables just after creation. 
# They do only after successful execution.  
SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, COUNT_STATEMENTS 
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='stored_programs';

--source suite/perfschema/include/program_execution.inc

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, COUNT_STATEMENTS 
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='stored_programs';

SELECT EVENT_NAME, SQL_TEXT, CURRENT_SCHEMA, OBJECT_TYPE, OBJECT_SCHEMA,
       OBJECT_NAME, NESTING_EVENT_TYPE, NESTING_EVENT_LEVEL FROM
       performance_schema.events_statements_history_long WHERE
       CURRENT_SCHEMA='stored_programs';

SELECT OBJECT_TYPE, OBJECT_SCHEMA, SUM_NO_GOOD_INDEX_USED
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='stored_programs';

--echo # clean -up

TRUNCATE TABLE performance_schema.events_statements_summary_by_program;
TRUNCATE TABLE performance_schema.events_statements_history_long;

# After truncate the statictics collected will are reset
SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, COUNT_STATEMENTS 
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='stored_programs';

--source suite/perfschema/include/program_cleanup.inc 

# After clean-up the stored programs are removed from PS tables 

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, COUNT_STATEMENTS 
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='stored_programs';

# general test
#TRUNCATE TABLE performance_schema.events_statements_summary_by_program;
#TRUNCATE TABLE performance_schema.events_statements_history_long;

#--source suite/perfschema/include/program_setup.inc
#--source suite/perfschema/include/program_execution.inc
#SELECT OBJECT_TYPE, OBJECT_SCHEMA, SUM_NO_GOOD_INDEX_USED 
#       FROM performance_schema.events_statements_summary_by_program;

#TRUNCATE TABLE performance_schema.events_statements_summary_by_program;
#--source suite/perfschema/include/program_cleanup.inc

#
# The statistics of a stored program are not collected 
# if its execution fails 
#

CREATE TABLE test.t1(
  a INT,
  b INT
);

DELIMITER |;
CREATE PROCEDURE test.p(x1 INT, x2 INT)
BEGIN
  INSERT INTO t1 VALUES (x1, x2);
END|
DELIMITER ;|

CREATE FUNCTION test.f(y1 INT, y2 INT) RETURNS INT
  RETURN y1+y2;

CREATE TRIGGER test.trg AFTER INSERT ON test.t1 FOR EACH ROW
  SET @neg=-1;

--error 1318
CALL test.p(7);
--error 1318
SELECT test.f("add",1,3);
--error 1064
INSERT INTO test.t1;

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, COUNT_STATEMENTS
       FROM performance_schema.events_statements_summary_by_program
       WHERE OBJECT_SCHEMA='test';

DROP PROCEDURE test.p;
DROP FUNCTION test.f;
DROP TRIGGER test.trg;
DROP TABLE test.t1;

