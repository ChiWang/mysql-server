# Tests for PERFORMANCE_SCHEMA

# This test verifies the correct behaviour in case of invalid
# usage of DMLs on the table replication_execute_status_by_worker.

--source include/not_embedded.inc
--source include/have_perfschema.inc
--source include/master-slave.inc

connection master;

--disable_result_log
SELECT * FROM performance_schema.replication_execute_status_by_worker
  LIMIT 1;

sELECT * FROM performance_schema.replication_execute_status_by_worker
  WHERE service_state='YES' OR last_error_message='ERROR';
--enable_result_log

--error ER_TABLEACCESS_DENIED_ERROR
INSERT INTO performance_schema.replication_execute_status_by_worker
  SET service_state='YES', last_error_message='ERROR',
  worker_id=1, thread_id=2, last_error_number=1234;

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_execute_status_by_worker
  SET worker_id=12;

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_execute_status_by_worker
  SET worker_d=12 where service_state like "YES";

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_execute_status_by_worker
  WHERE worker_id=1;

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_execute_status_by_worker;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_execute_status_by_worker READ;
UNLOCK TABLES;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_execute_status_by_worker WRITE;
UNLOCK TABLES;

connection slave;

source include/stop_slave.inc;
SET @save.slave_parallel_workers=@@global.slave_parallel_workers;
SET @@global.slave_parallel_workers=1;
# to avoid warnings
set @save.slave_transaction_retries= @@global.slave_transaction_retries;
source include/start_slave.inc;

--disable_result_log
SELECT * FROM performance_schema.replication_execute_status_by_worker
  LIMIT 1;

SELECT * FROM performance_schema.replication_execute_status_by_worker
  WHERE service_state='YES' OR last_error_message='ERROR';
--enable_result_log

--error ER_TABLEACCESS_DENIED_ERROR
INSERT INTO performance_schema.replication_execute_status_by_worker
  SET service_state='YES', last_error_message='ERROR',
  worker_id=1, thread_id=2, last_error_number=1234;

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_execute_status_by_worker
  SET worker_id=12;

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_execute_status_by_worker
  SET worker_d=12 where service_state like "YES";

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_execute_status_by_worker
  WHERE worker_id=1;

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_execute_status_by_worker;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_execute_status_by_worker READ;
UNLOCK TABLES;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_execute_status_by_worker WRITE;
UNLOCK TABLES;

#Cleanup
source include/stop_slave.inc;
# we reset master and slave to prevent errors above affecting start_slave.inc
# below.
reset master;
reset slave;
set @@global.slave_parallel_workers= @save.slave_parallel_workers;
set @@global.slave_transaction_retries= @save.slave_transaction_retries;
start slave;

--source include/rpl_end.inc
