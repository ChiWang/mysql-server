####################################
# SETUP
####################################
CREATE DATABASE sub_statements;
USE sub_statements;
CREATE TABLE t1(c1 INT);
CREATE TABLE t2(c1 INT);
CREATE TRIGGER simple_trigger BEFORE INSERT ON t1 FOR EACH ROW INSERT INTO
t2 VALUES('12');
CREATE PROCEDURE simple_procedure (OUT param1 INT) 
BEGIN 
SELECT COUNT(*) INTO PARAM1 FROM t1; 
INSERT INTO t1 values('2');
END //
CREATE FUNCTION simple_function (s CHAR(20)) RETURNS CHAR(50)
BEGIN 
INSERT INTO t1 values('3');
RETURN s;
END //
TRUNCATE TABLE performance_schema.events_statements_history;
####################################
# EXECUTING QUERIES
####################################
INSERT INTO t1 VALUES('1');
CALL simple_procedure(@a);
SELECT simple_function('Hello');
simple_function('Hello')
Hello
####################################
# QUERYING PS STATEMENT HISTORY
####################################
SELECT EVENT_NAME, SQL_TEXT, CURRENT_SCHEMA, OBJECT_TYPE, OBJECT_SCHEMA,
OBJECT_NAME, NESTING_EVENT_TYPE, NESTING_EVENT_LEVEL from
performance_schema.events_statements_history WHERE
CURRENT_SCHEMA='sub_statements';
EVENT_NAME	SQL_TEXT	CURRENT_SCHEMA	OBJECT_TYPE	OBJECT_SCHEMA	OBJECT_NAME	NESTING_EVENT_TYPE	NESTING_EVENT_LEVEL
statement/sql/select	SELECT simple_function('Hello')	sub_statements	NULL	NULL	NULL	NULL	0
statement/sp/stmt	INSERT INTO
t2 VALUES('12')	sub_statements	TRIGGER	sub_statements	simple_trigger	STATEMENT	1
statement/sql/insert	INSERT INTO t1 VALUES('1')	sub_statements	NULL	NULL	NULL	NULL	0
statement/sp/stmt	SELECT COUNT(*) INTO PARAM1 FROM t1	sub_statements	PROCEDURE	sub_statements	simple_procedure	STATEMENT	1
statement/sp/stmt	INSERT INTO
t2 VALUES('12')	sub_statements	TRIGGER	sub_statements	simple_trigger	STATEMENT	2
statement/sp/stmt	INSERT INTO t1 values('2')	sub_statements	PROCEDURE	sub_statements	simple_procedure	STATEMENT	1
statement/sql/call_procedure	CALL simple_procedure(@a)	sub_statements	NULL	NULL	NULL	NULL	0
statement/sp/stmt	INSERT INTO
t2 VALUES('12')	sub_statements	TRIGGER	sub_statements	simple_trigger	STATEMENT	2
statement/sp/stmt	INSERT INTO t1 values('3')	sub_statements	FUNCTION	sub_statements	simple_function	STATEMENT	1
statement/sp/freturn	NULL	sub_statements	FUNCTION	sub_statements	simple_function	STATEMENT	1
####################################
# CLEANUP
####################################
DROP TABLE t1;
DROP TABLE t2;
DROP DATABASE IF EXISTS sub_statements;
