TRUNCATE TABLE performance_schema.prepared_statements_instances;
CREATE DATABASE db;
USE db;
CREATE TABLE t
(
a INT,
b CHAR(10)
);
INSERT INTO t VALUES (1,"kuchipudi");
INSERT INTO t VALUES (2,"odissi");
INSERT INTO t VALUES (3,"kathak");
INSERT INTO t VALUES (4,"mohiyattam");
INSERT INTO t VALUES (5,"manipuri");
INSERT INTO t VALUES (6,"kathakali");
CREATE PROCEDURE p1()
BEGIN
PREPARE st FROM 'SELECT * FROM t WHERE a<=?' ;
SET @a=3;
EXECUTE st using @a;
END|
CALL p1()|
a	b
1	kuchipudi
2	odissi
3	kathak
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st	SELECT * FROM t WHERE a<=?	1	PROCEDURE	db	p1
DEALLOCATE PREPARE st|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
CREATE PROCEDURE p2()
BEGIN
PREPARE st1 FROM 'INSERT INTO t SELECT * FROM t WHERE a<=?' ;
END|
CALL p2()|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st1	INSERT INTO t SELECT * FROM t WHERE a<=?	0	PROCEDURE	db	p2
SET @a=4|
EXECUTE st1 using @a|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st1	INSERT INTO t SELECT * FROM t WHERE a<=?	1	PROCEDURE	db	p2
CREATE PROCEDURE p3()
BEGIN
SET @a=2; 
EXECUTE st1 using @a;
END|
CALL p3()|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st1	INSERT INTO t SELECT * FROM t WHERE a<=?	2	PROCEDURE	db	p2
DEALLOCATE PREPARE st1|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
PREPARE st2 FROM 'UPDATE t SET a=a+1 WHERE b=?'|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st2	UPDATE t SET a=a+1 WHERE b=?	0	NULL	NULL	NULL
CREATE PROCEDURE p4()
BEGIN
SET @b='kuchipudi';
EXECUTE st2 USING @b;
END|
CALL p4()|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st2	UPDATE t SET a=a+1 WHERE b=?	1	NULL	NULL	NULL
DEALLOCATE PREPARE st2|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
CREATE PROCEDURE p5()
BEGIN
SET @a=1;
SELECT @a;
END|
PREPARE st3 FROM 'CALL p5()'|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st3	CALL p5()	0	NULL	NULL	NULL
EXECUTE st3|
@a
1
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st3	CALL p5()	1	NULL	NULL	NULL
DEALLOCATE PREPARE st3|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances|
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
SET GLOBAL event_scheduler=ON;
CREATE EVENT e1 ON SCHEDULE EVERY 1 SECOND DO
BEGIN
PREPARE st FROM 'SELECT POW(?,?)';  
SET @b=5;
SET @a=10;
EXECUTE st USING @a, @b;
END|
SELECT STATEMENT_NAME, SQL_TEXT, COUNT_EXECUTE, OWNER_OBJECT_TYPE, OWNER_OBJECT_SCHEMA, OWNER_OBJECT_NAME FROM performance_schema.prepared_statements_instances;
STATEMENT_NAME	SQL_TEXT	COUNT_EXECUTE	OWNER_OBJECT_TYPE	OWNER_OBJECT_SCHEMA	OWNER_OBJECT_NAME
st	SELECT POW(?,?)	1	EVENT	db	e1
SET GLOBAL event_scheduler=OFF;
TRUNCATE TABLE performance_schema.prepared_statements_instances;
TRUNCATE TABLE performance_schema.events_statements_history_long;
DROP TABLE t;
DROP PROCEDURE p1;
DROP PROCEDURE p2;
DROP PROCEDURE p3;
DROP PROCEDURE p4;
DROP PROCEDURE p5;
DROP EVENT IF EXISTS e1;
DROP DATABASE db;
