#
# ==== Purpose ====
#
# WL#6559 Optimize GTIDs for passive slave - store GTIDs in table
#
# An assistant test for compression thread.
#
# Test case 1: Simulate a crash in the middle of transaction of
#              compressing gtid table, veriry that we can get correct
#              gtid sets after server restarts.
# Test case 2: Simulate an error when compressing gtid table, verify
#              that we can get correct gtid sets in the case.
# Test case 3: Verify that 'Compressing gtid_executed table' stage is set
#              for compression thread when compressing gtid table.
#

--source include/not_valgrind.inc
--source include/have_debug.inc
--source include/have_debug_sync.inc
--source include/have_innodb.inc
--source include/have_log_bin.inc
--source include/have_gtid.inc

call mtr.add_suppression("Failed to compress the gtid table.");
SET @debug_save= @@GLOBAL.DEBUG;
--let $master_uuid= `SELECT @@GLOBAL.SERVER_UUID`
CREATE TABLE t1 (a INT) ENGINE=InnoDB;
SET @@GLOBAL.DEBUG= '+d, simulate_crash_on_compress_gtid_table';
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--echo # simulate_crash_on_compress_gtid_table
INSERT INTO t1 VALUES(1);
# The following 'SIGNAL' query may lost connection to MySQL server
--error 0,2013
SET DEBUG_SYNC= 'now SIGNAL notified_thread_complete';

--source include/wait_until_disconnected.inc
--enable_reconnect
--echo # Restart the master server
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--source include/wait_until_connected_again.inc
--disable_reconnect

--echo
--echo # Veriry that we can get correct gtid sets after server restarts
--echo # from a crash of compressing gtid table.
--echo
--let $assert_text= committed gtid set is MASTER_UUID:1-3
--let $assert_cond= @@GLOBAL.GTID_EXECUTED = "$master_uuid:1-3"
--source include/assert.inc
--replace_result $master_uuid MASTER_UUID
SELECT * FROM mysql.gtid_executed;

SET @@GLOBAL.DEBUG= '+d, simulate_error_on_compress_gtid_table';
INSERT INTO t1 VALUES(3);
# Waiting for error happened on compress gtid table
SET DEBUG_SYNC='now WAIT_FOR compression_failed';
SET @@GLOBAL.DEBUG= '-d, simulate_error_on_compress_gtid_table';

--echo
--echo # Veriry that we can get correct gtid sets, even if we
--echo # encountered an error when compressing gtid table.
--echo
--let $assert_text= committed gtid set is MASTER_UUID:1-4
--let $assert_cond= @@GLOBAL.GTID_EXECUTED = "$master_uuid:1-4"
--source include/assert.inc
--replace_result $master_uuid MASTER_UUID
SELECT * FROM mysql.gtid_executed;

--echo
--echo # Verify that 'Compressing gtid_executed table' stage is set
--echo # for compression thread when compressing gtid table.
--echo
SET @@GLOBAL.DEBUG= '+d, fetch_compression_thread_stage_info';
INSERT INTO t1 VALUES(4);
SET DEBUG_SYNC='now WAIT_FOR fetch_thread_stage';
--query_vertical SELECT NAME, TYPE, PROCESSLIST_STATE, PROCESSLIST_COMMAND FROM performance_schema.threads where NAME= "thread/sql/compress_gtid_table";

SET GLOBAL DEBUG= @debug_save;
DROP TABLE t1;
