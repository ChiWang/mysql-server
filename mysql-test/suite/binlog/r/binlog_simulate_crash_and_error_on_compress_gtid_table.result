call mtr.add_suppression("Failed to compress the gtid table.");
SET @debug_save= @@GLOBAL.DEBUG;
CREATE TABLE t1 (a INT) ENGINE=InnoDB;
SET @@GLOBAL.DEBUG= '+d, simulate_crash_on_compress_gtid_table';
# simulate_crash_on_compress_gtid_table
INSERT INTO t1 VALUES(1);
SET DEBUG_SYNC= 'now SIGNAL notified_thread_complete';
# Restart the master server

# Veriry that we can get correct gtid sets after server restarts
# from a crash of compressing gtid table.

include/assert.inc [committed gtid set is MASTER_UUID:1-3]
SELECT * FROM mysql.gtid_executed;
sid	gno_start	gno_end
MASTER_UUID	1	1
MASTER_UUID	2	2
MASTER_UUID	3	3
SET @@GLOBAL.DEBUG= '+d, simulate_error_on_compress_gtid_table';
INSERT INTO t1 VALUES(3);
SET DEBUG_SYNC='now WAIT_FOR compression_failed';
SET @@GLOBAL.DEBUG= '-d, simulate_error_on_compress_gtid_table';

# Veriry that we can get correct gtid sets, even if we
# encountered an error when compressing gtid table.

include/assert.inc [committed gtid set is MASTER_UUID:1-4]
SELECT * FROM mysql.gtid_executed;
sid	gno_start	gno_end
MASTER_UUID	1	1
MASTER_UUID	2	2
MASTER_UUID	3	3
MASTER_UUID	4	4

# Verify that 'Compressing gtid_executed table' stage is set
# for compression thread when compressing gtid table.

SET @@GLOBAL.DEBUG= '+d, fetch_compression_thread_stage_info';
INSERT INTO t1 VALUES(4);
SET DEBUG_SYNC='now WAIT_FOR fetch_thread_stage';
SELECT NAME, TYPE, PROCESSLIST_STATE, PROCESSLIST_COMMAND FROM performance_schema.threads where NAME= "thread/sql/compress_gtid_table";;
NAME	thread/sql/compress_gtid_table
TYPE	FOREGROUND
PROCESSLIST_STATE	Compressing gtid_executed table
PROCESSLIST_COMMAND	Daemon
SET @@GLOBAL.DEBUG= '-d, fetch_compression_thread_stage_info';
DROP TABLE t1;

# Write test case to cover error branches of resetting gtid table.

call mtr.add_suppression("Failed to delete the row: .* from the gtid table.");
SET @@GLOBAL.DEBUG= '+d, simulate_error_on_delete_gtid_from_table';
RESET MASTER;
ERROR HY000: Got error -1 from storage engine
SET GLOBAL DEBUG= @debug_save;
