#
# WL#3656- Table:performance_schema.replication_execute_configuration
#
source include/master-slave.inc;
source include/have_binlog_format_mixed.inc;

--connection slave

#--disable_result_log
# Verify that the select * works.
query_vertical select * from performance_schema.replication_execute_configuration;
--disable_result_log
#Verify that insert, update and delete do not work.
error ER_TABLEACCESS_DENIED_ERROR;
insert into performance_schema.replication_execute_configuration values(1);
error ER_TABLEACCESS_DENIED_ERROR;
update performance_schema.replication_execute_configuration set Host='';
error ER_TABLEACCESS_DENIED_ERROR;
delete from performance_schema.replication_execute_configuration;
--enable_result_log

# Verify that SELECT works for every field and produces an output similar to
# the corresponding field in SHOW SLAVE STATUS(SSS) in all scenarios.
let $sss_value= query_get_value(SHOW SLAVE STATUS, SQL_Delay, 1);
let $ps_value= query_get_value(select Desired_Delay from performance_schema.replication_execute_configuration, Desired_Delay, 1);
let $assert_text= Value returned by SSS and PS table for Desired_Delay should be same.;
let $assert_cond= "$sss_value" = "$ps_value";
source include/rpl_assert.inc;

source include/stop_slave.inc;
eval change master to master_delay= 2;
source include/start_slave.inc;

let $sss_value= query_get_value(SHOW SLAVE STATUS, SQL_Delay, 1);
let $ps_value= query_get_value(select Desired_Delay from performance_schema.replication_execute_configuration, Desired_Delay, 1);
let $assert_text= Value returned by SSS and PS table for Desired_Delay should be same.;
let $assert_cond= "$sss_value" = "$ps_value";
source include/rpl_assert.inc;

source include/stop_slave.inc;
eval change master to master_delay= 0;
source include/start_slave.inc;

source include/rpl_end.inc;
