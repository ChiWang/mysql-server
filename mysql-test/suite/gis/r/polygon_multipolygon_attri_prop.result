#Turn on the geometry data print.
SET SESSION debug="+d,row_print_geometry_data";
#Confirming the storage engine
SHOW VARIABLES LIKE '%engine%';
Variable_name	Value
default_storage_engine	MyISAM
default_tmp_storage_engine	MyISAM
#Creating the spatial Geometry object
USE test;
DROP TABLE IF EXISTS gis_polygon, gis_multi_polygon;
CREATE TABLE gis_polygon   (fid INTEGER NOT NULL PRIMARY KEY, g POLYGON);
CREATE TABLE gis_multi_polygon  (fid INTEGER NOT NULL PRIMARY KEY, g MULTIPOLYGON);
#INSERT valid entries to Polygon class
INSERT INTO gis_polygon VALUES
(301, PolygonFromText('POLYGON((10 10,20 10,20 20,10 20,10 10))')),
(302, PolyFromText('POLYGON((0 0,50 0,50 50,0 50,0 0), (10 10,20 10,20 20,10 20,10 10))')),
(303, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(0, 0)))))),
(304, PolygonFromText('POLYGON((10 10,20 10,20 20,10 20,10 10))')),
(305, PolyFromText('POLYGON((0 0,50 0,50 50,0 50,0 0), (10 10,20 10,20 20,10 20,10 10))')),
(306, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(0, 0)))))),
(307, PolygonFromText('POLYGON((0 0,0 0,0 0,0 0,0 0))')),
(308, PolyFromText('POLYGON((0 0,0 0,0 0,0 0,0 0), (0 0,0 0,0 0,0 0,0 0))')),
(309, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0)))))),
(310, PolygonFromText('POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))')),
(311, PolyFromText('POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1), (1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))')),
(312, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0), Point(0, 2), Point(5, 0), Point(-0, 6), Point(0, -0), Point(0, 9), Point(54, 0), Point(10, 0), Point(13, 0), Point(20, 0), Point(0, 40), Point(0, 5), Point(0, 4), Point(0, 3), Point(0, 2), Point(0, 1), Point(0, 90), Point(0, 9), Point(90, 0), Point(30, 0), Point(60, 0), Point(20, 0), Point(90, 90), Point(70, 50), Point(0, 0)))))),
(313, PolygonFromText
(314, PolyFromText
(315, PolyFromWKB(AsWKB(Polygon(LineString(Pointointointoint(999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999))))));
#INSERT invalid entries to Polygon class
INSERT INTO gis_polygon VALUES
(316, PolygonFromText('POLYGON((Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç))')),
(317, PolyFromText('POLYGON((Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç), (Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç))')),
(318, PolyFromWKB(AsWKB(Polygon(LineString(Point('Ç', 'Ç'), Point('Ç', 'Ç'), Point('Ç', 'Ç'), Point('Ç', 'Ç')))))),
(319, PolygonFromText('POLYGON((1 1,1 ))')),
(320, PolyFromText('POLYGON((1 1,1), (1 1,1))')),
(322, PolygonFromText('POLYGON(())')),
(323, PolyFromText('POLYGON((), (1 1))')),
(324, PolyFromText('POLYGON((), ())')),
(327, PolygonFromText('POLYGON((a b))')),
(328, PolyFromText('POLYGON((a b), (1 2))')),
(329, PolyFromWKB(AsWKB(Polygon(LineString(Point('a', 'b'), Point(1, 1), Point(2, 2), Point(1, 1)))))),
(330, PolygonFromText('POLYGON((-0))')),
(331, PolyFromText('POLYGON((-0), (-0))')),
(333, PolygonFromText
(334, PolyFromText
(335, PolyFromWKB('AsWKB(Polygon(LineString(Pointointoint(999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999), Point(999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999))))')),
(336, PolygonFromText('POLYGON((NULL))')),
(337, PolyFromText('POLYGON((NULL), (NULL))')),
(339, PolyFromWKB(AsWKB(Polygon(LineString(Point('a', 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0)))))),
(340, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0)))))),
(341, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point('$', 0)))))),
(342, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, -0), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0))))));
#Checking the integrity of the above insert statements 
select count(g) from gis_polygon;
count(g)
19
18 expected
select count(astext(g)) from gis_polygon;
count(astext(g))
19
18 expected
select count(distinct(g)) from gis_polygon;
count(distinct(g))
11
11 expected
select count(distinct(astext(g))) from gis_polygon;
count(distinct(astext(g)))
11
11 expected
#INSERT valid entries to multi_polygon class
INSERT INTO gis_multi_polygon VALUES
(601, MultiPolygonFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(602, MPolyFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26), (52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(603, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 3), Point(3, 3), Point(3, 0), Point(0, 3))))))),
(604, MultiPolygonFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(605, MPolyFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26), (52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(606, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 3), Point(3, 3), Point(3, 0), Point(0, 3))))))),
(607, MultiPolygonFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(608, MPolyFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0), (0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(609, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0))))))),
(610, MultiPolygonFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(611, MPolyFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(612, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0))))))),
(613, MultiPolygonFromText
(614, MPolyFromText
(615, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point
#INSERT invalid entries to multi_polygon class
INSERT INTO gis_multi_polygon VALUES
(616, MultiPolygonFromText('MULTIPOLYGON(((),()),(()))')),
(617, MPolyFromText('MULTIPOLYGON(((), ()),(()))')),
(619, MultiPolygonFromText('MULTIPOLYGON(((NULL),(NULL)),((NULL)))')),
(620, MPolyFromText('MULTIPOLYGON(((NULL), (NULL)),((NULL)))')),
(622, MultiPolygonFromText('MULTIPOLYGON(((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ),(ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)),((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)))')),
(623, MPolyFromText('MULTIPOLYGON(((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ), (ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)),((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)))')),
(624, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'))))))),
(625, MultiPolygonFromText('MULTIPOLYGON(((a 1,2 3,4 5,5 6),(0 1,2 3,4 5,5 6)),((9 1,2 3,4 5,5 6)))')),
(626, MPolyFromText('MULTIPOLYGON(((a 1,2 3,4 5,5 6),(0 1,2 3,4 5,5 6)),((9 1,2 3,4 5,5 6)))')),
(628, MultiPolygonFromText('MULTIPOLYGON(((-0),(-0)),((-0)))')),
(629, MPolyFromText('MULTIPOLYGON(((-0),(0 1, 2 3,4 5,5 6)),((9 1, 2 3,4 5,5 6)))')),
(631, MultiPolygonFromText('MULTIPOLYGON(((0 0 0 0 0),(1 1 1 1 1)),((3 3 3 3 3)))')),
(632, MPolyFromText('MULTIPOLYGON(((4 4 4 4 4),(5 5 5 5 5)),((7 7 7 7 7)))')),
(634, MultiPolygonFromText('MULTIPOLYGON(((@ $),(% -&)),((1, 2)))')),
(635, MPolyFromText('MULTIPOLYGON(((@ $),(% -&)),((1, 2)))')),
(636, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('#', '-$'), Point('!', '~'), Point('^', '*'), Point('-', '?')))))));
#Checking the integrity of the above insert statements 
select count(g) from gis_multi_polygon;
count(g)
14
14 expected
select count(astext(g)) from gis_multi_polygon;
count(astext(g))
14
14 expected
select count(distinct(g)) from gis_multi_polygon;
count(distinct(g))
6
6 expected
select count(distinct(astext(g))) from gis_multi_polygon;
count(distinct(astext(g)))
6
6 expected
#Displaying the inserted spatial Data
Select fid, AsText(g) from gis_polygon;
fid	AsText(g)
301	POLYGON((10 10,20 10,20 20,10 20,10 10))
302	POLYGON((0 0,50 0,50 50,0 50,0 0),(10 10,20 10,20 20,10 20,10 10))
303	POLYGON((0 0,30 0,30 30,0 0))
304	POLYGON((10 10,20 10,20 20,10 20,10 10))
305	POLYGON((0 0,50 0,50 50,0 50,0 0),(10 10,20 10,20 20,10 20,10 10))
306	POLYGON((0 0,30 0,30 30,0 0))
307	POLYGON((0 0,0 0,0 0,0 0,0 0))
308	POLYGON((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0))
309	POLYGON((0 0,0 0,0 0,0 0))
310	POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))
311	POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1),(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))
312	POLYGON((0 0,30 0,30 30,1 0,0 2,5 0,0 6,0 0,0 9,54 0,10 0,13 0,20 0,0 40,0 5,0 4,0 3,0 2,0 1,0 90,0 9,90 0,30 0,60 0,20 0,90 90,70 50,0 0))
313	NULL
314	NULL
315	POLYGON((1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65))
316	NULL
317	NULL
318	POLYGON((0 0,0 0,0 0,0 0))
319	NULL
320	NULL
322	NULL
323	NULL
324	NULL
327	NULL
328	NULL
329	POLYGON((0 0,1 1,2 2,1 1,0 0))
330	NULL
331	NULL
333	NULL
334	NULL
335	NULL
336	NULL
337	NULL
339	POLYGON((0 0,1 1,2 2,1 1,0 0))
340	POLYGON((0 0,1 1,2 2,1 1,0 0))
341	POLYGON((0 0,1 1,2 2,1 1,0 0))
342	POLYGON((0 0,1 1,2 2,1 1,0 0))
Select fid, AsText(g) from gis_multi_polygon;
fid	AsText(g)
601	MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))
602	MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))
603	MULTIPOLYGON(((0 3,3 3,3 0,0 3)))
604	MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))
605	MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))
606	MULTIPOLYGON(((0 3,3 3,3 0,0 3)))
607	MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))
608	MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))
609	MULTIPOLYGON(((0 0,0 0,0 0,0 0)))
610	MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))
611	MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))
612	MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0,0 0)))
613	NULL
614	NULL
615	NULL
616	NULL
617	NULL
619	NULL
620	NULL
622	NULL
623	NULL
624	MULTIPOLYGON(((0 0,0 0,0 0,0 0)))
625	NULL
626	NULL
628	NULL
629	NULL
631	NULL
632	NULL
634	NULL
635	NULL
636	MULTIPOLYGON(((0 0,0 0,0 0,0 0)))
#Checking the geometry types for the Polygon and the MulytiPolygon class 
select fid,GeometryType(g) from gis_polygon where g is not NULL;
fid	GeometryType(g)
301	POLYGON
302	POLYGON
303	POLYGON
304	POLYGON
305	POLYGON
306	POLYGON
307	POLYGON
308	POLYGON
309	POLYGON
310	POLYGON
311	POLYGON
312	POLYGON
315	POLYGON
318	POLYGON
329	POLYGON
339	POLYGON
340	POLYGON
341	POLYGON
342	POLYGON
select count(GeometryType(g)) FROM gis_polygon;
count(GeometryType(g))
19
18 expected
select fid,GeometryType(g) from gis_multi_polygon where g is not NULL;
fid	GeometryType(g)
601	MULTIPOLYGON
602	MULTIPOLYGON
603	MULTIPOLYGON
604	MULTIPOLYGON
605	MULTIPOLYGON
606	MULTIPOLYGON
607	MULTIPOLYGON
608	MULTIPOLYGON
609	MULTIPOLYGON
610	MULTIPOLYGON
611	MULTIPOLYGON
612	MULTIPOLYGON
624	MULTIPOLYGON
636	MULTIPOLYGON
select count(GeometryType(g)) FROM gis_multi_polygon;
count(GeometryType(g))
14
14 expected
#Checking the geometry types of some random Polygon and MultiPolygon.
Select GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));
GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))
POLYGON
POLYGON expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
MULTIPOLYGON
MULTIPOLYGON expected
#WKB data, little-endian format
Select GeometryType(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
GeometryType(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
POLYGON
POLYGON expected
Select GeometryType(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
GeometryType(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000
POLYGON
POLYGON expected
Select GeometryType(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
GeometryType(MPolyFromWKB(0x01060000000200000001030000000100000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000001030000000100000005000
MULTIPOLYGON
MULTIPOLYGON expected
#WKB data, big-endian format
Select GeometryType(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
GeometryType(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
POLYGON
POLYGON expected
Select GeometryType(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
GeometryType(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040
POLYGON
POLYGON expected
Select GeometryType(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
GeometryType(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
GeometryType(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));
GeometryType(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))
POLYGON
POLYGON expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
GeometryType(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
GeometryType(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select GeometryType(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
GeometryType(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
POLYGON
POLYGON expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select GeometryType(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
GeometryType(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
GeometryType(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
GeometryType(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
POLYGON
POLYGON expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
POLYGON
POLYGON expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.909
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
GeometryType(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
POLYGON
POLYGON expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select GeometryType(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
GeometryType(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
POLYGON
POLYGON expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select GeometryType(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
GeometryType(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
MULTIPOLYGON
MULTIPOLYGON expected
Select GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = GeometryType(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = GeometryType(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = GeometryType(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = GeometryType(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
0
0 expected
Select GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
0
0 expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
0
0 expected
#Invalid WKB data
Select GeometryType(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select GeometryType(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select GeometryType(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select GeometryType(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the SRID for the Polygon and the MulytiPolygon class 
select fid,SRID(g) from gis_polygon where g is not NULL;
fid	SRID(g)
301	0
302	0
303	0
304	0
305	0
306	0
307	0
308	0
309	0
310	0
311	0
312	0
315	0
318	0
329	0
339	0
340	0
341	0
342	0
select count(SRID(g)) FROM gis_polygon;
count(SRID(g))
19
18 expected
select fid,SRID(g) from gis_multi_polygon where g is not NULL;
fid	SRID(g)
601	0
602	0
603	0
604	0
605	0
606	0
607	0
608	0
609	0
610	0
611	0
612	0
624	0
636	0
select count(SRID(g)) FROM gis_multi_polygon;
count(SRID(g))
14
14 expected
#Checking the SRID of some random Polygon and MultiPolygon.
Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));
SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'))
0
0 expected
Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
0
0 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))
0
0 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
0
0 expected
#WKB data, little-endian format
Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
0
0 expected
Select SRID(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
SRID(PolyFromWKB(0x01030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000005000000000000000000004000000000000000400000000000
0
0 expected
Select SRID(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
SRID(MPolyFromWKB(0x0106000000020000000103000000010000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000103000000010000000500000000000
0
0 expected
#WKB data, big-endian format
Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
0
0 expected
Select SRID(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
SRID(PolyFromWKB(0x00000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000005400000000000000040000000000000004000000000
0
0 expected
Select SRID(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
SRID(MPolyFromWKB(0x0000000006000000020000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000440000000000000004000000
0
0 expected
Select SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
0
0 expected
Select SRID(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));
SRID(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'))
0
0 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))
0
0 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
0
0 expected
Select SRID(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
SRID(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select SRID(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
SRID(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
0
0 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select SRID(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
SRID(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
0
0 expected
Select SRID(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
SRID(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select SRID(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
SRID(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
0
0 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,
0
0 expected
Select SRID(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
SRID(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 
0
0 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
0
0 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
0
0 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
0
0 expected
Select SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select SRID(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
SRID(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
0
0 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select SRID(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
SRID(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
0
0 expected
Select SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = SRID(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = SRID(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = SRID(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = SRID(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
1
1 expected
Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
SRID(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
1
1 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
1
1 expected
Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',0));
SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',0))
0
0 expected
Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',10000));
SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',10000))
10000
10000 expected
Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,123456));
SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,123456))
123456
123456 expected
Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,123456789));
SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,123456789))
123456789
123456789 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967295));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967295))
4294967295
4294967295 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',0));
SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',0))
0
0 expected
Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',20000));
SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',20000))
20000
20000 expected
Select SRID(MPolyFromWKB(0x
SRID(MPolyFromWKB(0x0000000006000000020000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000440000000000000004000000
123456789
123456789 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),4294967295));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),4294967295))
4294967295
4294967295 expected
Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',-1));
SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',-1))
4294967295
4294967295 expected
Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',-1024));
SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',-1024))
4294966272
4294966272 expected
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967296));
SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967296))
0
0 expected
Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,429496729510));
SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,429496729510))
4294967206
4294967206 expected
Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,42949672950000));
SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,42949672950000))
4294957296
4294957296 expected
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1));
SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1))
4294967295
4294967295 expected
Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1024));
SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1024))
4294966272
4294966272 expected
Select SRID(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040,4294967296));
SRID(MPolyFromWKB(0x0106000000020000000103000000010000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000103000000010000000500000000000
0
0 expected
Select SRID(MPolyFromWKB(0x
SRID(MPolyFromWKB(0x0000000006000000020000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000440000000000000004000000
4294967206
4294967206 expected
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),42949672950000));
SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),42949672950000))
4294957296
4294957296 expected
#Invalid WKB data
Select SRID(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select SRID(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select SRID(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select SRID(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the Dimension for the Polygon and the MulytiPolygon class 
select fid,Dimension(g) from gis_polygon where g is not NULL;
fid	Dimension(g)
301	2
302	2
303	2
304	2
305	2
306	2
307	2
308	2
309	2
310	2
311	2
312	2
315	2
318	2
329	2
339	2
340	2
341	2
342	2
select count(Dimension(g)) FROM gis_polygon;
count(Dimension(g))
19
18 expected
select fid,Dimension(g) from gis_multi_polygon where g is not NULL;
fid	Dimension(g)
601	2
602	2
603	2
604	2
605	2
606	2
607	2
608	2
609	2
610	2
611	2
612	2
624	2
636	2
select count(Dimension(g)) FROM gis_multi_polygon;
count(Dimension(g))
14
14 expected
#Checking the Dimension of some random Polygon and MultiPolygon.
Select Dimension(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));
Dimension(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'))
2
2 expected
Select Dimension(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
Dimension(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
2
2 expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))
2
2 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
2
2 expected
Select Dimension(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Dimension(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
2
2 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
2
2 expected
#WKB data, little-endian format
Select Dimension(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
Dimension(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
2
2 expected
Select Dimension(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
Dimension(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000
2
2 expected
Select Dimension(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
Dimension(MPolyFromWKB(0x01060000000200000001030000000100000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000001030000000100000005000000
2
2 expected
#WKB data, big-endian format
Select Dimension(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
Dimension(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
2
2 expected
Select Dimension(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
Dimension(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000
2
2 expected
Select Dimension(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
Dimension(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040
2
2 expected
Select Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
2
2 expected
Select Dimension(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));
Dimension(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'))
2
2 expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))
2
2 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
2
2 expected
Select Dimension(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Dimension(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
2
2 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
2
2 expected
Select Dimension(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
Dimension(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select Dimension(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
Dimension(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
2
2 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select Dimension(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
Dimension(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
2
2 expected
Select Dimension(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Dimension(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
2
2 expected
Select Dimension(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Dimension(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
2
2 expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
2
2 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 0
2
2 expected
Select Dimension(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
Dimension(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.
2
2 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
2
2 expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
2
2 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
2
2 expected
Select Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select Dimension(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
Dimension(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
2
2 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select Dimension(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
Dimension(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
2
2 expected
Select Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Dimension(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Dimension(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Dimension(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Dimension(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
1
1 expected
Select Dimension(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
Dimension(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
1
1 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
1
1 expected
#Invalid WKB data
Select Dimension(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Dimension(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Dimension(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Dimension(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the Envelope for the Polygon and the MulytiPolygon class 
select fid,AsText(Envelope(g)) from gis_polygon where g is not NULL;
fid	AsText(Envelope(g))
301	POLYGON((10 10,20 10,20 20,10 20,10 10))
302	POLYGON((0 0,50 0,50 50,0 50,0 0))
303	POLYGON((0 0,30 0,30 30,0 30,0 0))
304	POLYGON((10 10,20 10,20 20,10 20,10 10))
305	POLYGON((0 0,50 0,50 50,0 50,0 0))
306	POLYGON((0 0,30 0,30 30,0 30,0 0))
307	POLYGON((0 0,0 0,0 0,0 0,0 0))
308	POLYGON((0 0,0 0,0 0,0 0,0 0))
309	POLYGON((0 0,0 0,0 0,0 0,0 0))
310	POLYGON((1 1,1 1,1 1,1 1,1 1))
311	POLYGON((1 1,1 1,1 1,1 1,1 1))
312	POLYGON((0 0,90 0,90 90,0 90,0 0))
315	POLYGON((1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65))
318	POLYGON((0 0,0 0,0 0,0 0,0 0))
329	POLYGON((0 0,2 0,2 2,0 2,0 0))
339	POLYGON((0 0,2 0,2 2,0 2,0 0))
340	POLYGON((0 0,2 0,2 2,0 2,0 0))
341	POLYGON((0 0,2 0,2 2,0 2,0 0))
342	POLYGON((0 0,2 0,2 2,0 2,0 0))
select count(AsText(Envelope(g))) FROM gis_polygon;
count(AsText(Envelope(g)))
19
18 expected
select fid,AsText(Envelope(g)) from gis_multi_polygon where g is not NULL;
fid	AsText(Envelope(g))
601	POLYGON((28 0,84 0,84 42,28 42,28 0))
602	POLYGON((28 0,84 0,84 42,28 42,28 0))
603	POLYGON((0 0,3 0,3 3,0 3,0 0))
604	POLYGON((28 0,84 0,84 42,28 42,28 0))
605	POLYGON((28 0,84 0,84 42,28 42,28 0))
606	POLYGON((0 0,3 0,3 3,0 3,0 0))
607	POLYGON((0 0,0 0,0 0,0 0,0 0))
608	POLYGON((0 0,0 0,0 0,0 0,0 0))
609	POLYGON((0 0,0 0,0 0,0 0,0 0))
610	POLYGON((0 0,0 0,0 0,0 0,0 0))
611	POLYGON((0 0,0 0,0 0,0 0,0 0))
612	POLYGON((0 0,0 0,0 0,0 0,0 0))
624	POLYGON((0 0,0 0,0 0,0 0,0 0))
636	POLYGON((0 0,0 0,0 0,0 0,0 0))
select count(AsText(Envelope(g))) FROM gis_multi_polygon;
count(AsText(Envelope(g)))
14
14 expected
#Checking the Envelope of some random Polygon and MultiPolygon.
Select AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));
AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
Select AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));
AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));
AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
#WKB data, little-endian format
Select AsText(Envelope(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));
AsText(Envelope(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)))
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
Select AsText(Envelope(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));
AsText(Envelope(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
Select AsText(Envelope(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));
AsText(Envelope(MPolyFromWKB(0x01060000000200000001030000000100000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000001030000000100000005
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
#WKB data, big-endian format
Select AsText(Envelope(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));
AsText(Envelope(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)))
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
Select AsText(Envelope(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));
AsText(Envelope(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
Select AsText(Envelope(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000)));
AsText(Envelope(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000
POLYGON((0 0,5 0,5 5,0 5,0 0))
POLYGON((0 0,5 0,5 5,0 5,0 0)) expected
Select AsText(Envelope(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))')));
AsText(Envelope(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))')))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5)) expected
Select AsText(Envelope(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))')));
AsText(Envelope(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))')))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2)) expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5)) expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2)) expected
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')));
AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2))
POLYGON((1 -2,10 -2,10 0,1 0,1 -2)) expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5))
POLYGON((1 -5,10 -5,10 1,1 1,1 -5)) expected
Select AsText(Envelope(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));
AsText(Envelope(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')))
NULL
NULL expected
Select AsText(Envelope(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));
AsText(Envelope(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')))
NULL
NULL expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
POLYGON((0 0,0.1 0,0.1 0,0 0,0 0))
POLYGON((0 0,0.1 0,0.1 0,0 0,0 0)) expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')))
NULL
NULL expected
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));
AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')))
NULL
NULL expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))))
POLYGON((0 0,0.1 0,0.1 0,0 0,0 0))
POLYGON((0 0,0.1 0,0.1 0,0 0,0 0)) expected
Select AsText(Envelope(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(Envelope(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(Envelope(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));
AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0))
POLYGON((0.9999 0,634736.736354 0,634736.736354 7654.24251,0.9999 7654.24251,0.9999 0)) expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
POLYGON((0.1 0,2 0,2 2,0.1 2,0.1 0))
POLYGON((0.1 0,2 0,2 2,0.1 2,0.1 0)) expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))))
POLYGON((0.1 0,2 0,2 2,0.1 2,0.1 0))
POLYGON((0.1 0,2 0,2 2,0.1 2,0.1 0)) expected
Select AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));
AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(Envelope(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));
AsText(Envelope(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
POLYGON((0 -11111,1 -11111,1 0,0 0,0 -11111))
POLYGON((0 -11111,1 -11111,1 0,0 0,0 -11111)) expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')))
NULL
NULL expected
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));
AsText(Envelope(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')))
NULL
NULL expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))))
POLYGON((0 -11111,1 -11111,1 0,0 0,0 -11111))
POLYGON((0 -11111,1 -11111,1 0,0 0,0 -11111)) expected
Select AsText(Envelope());
ERROR 42000: Incorrect parameter count in the call to native function 'Envelope'
Select AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));
AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))))
NULL
NULL expected
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Envelope(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));
AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Envelope(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')))
0
0 expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))))
0
0 expected
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Envelope(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')));
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Envelope(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')))
0
0 expected
Select AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))));
AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))))
0
0 expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')))
1
1 expected
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')));
AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')))
1
1 expected
#Invalid WKB data
Select AsText(Envelope(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Envelope(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Envelope(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Envelope(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
#Checking the IsSimple for the Polygon and the MulytiPolygon class 
select fid,IsSimple(g) from gis_polygon where g is not NULL;
fid	IsSimple(g)
301	1
302	1
303	1
304	1
305	1
306	1
307	1
308	0
309	1
310	0
311	0
312	0
315	1
318	1
329	1
339	1
340	1
341	1
342	1
select count(IsSimple(g)) FROM gis_polygon;
count(IsSimple(g))
19
18 expected
select fid,IsSimple(g) from gis_multi_polygon where g is not NULL;
fid	IsSimple(g)
601	1
602	1
603	1
604	1
605	1
606	1
607	1
608	1
609	1
610	0
611	0
612	0
624	1
636	1
select count(IsSimple(g)) FROM gis_multi_polygon;
count(IsSimple(g))
14
14 expected
#Checking the IsSimple of some random Polygon and MultiPolygon.
Select IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));
IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'))
0
0 expected
Select IsSimple(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
IsSimple(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
0
0 expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))
0
0 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select IsSimple(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
IsSimple(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
0
0 expected
select issimple(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));
issimple(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'))
0
0 expected
#WKB data, little-endian format
Select IsSimple(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
IsSimple(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
1
1 expected
Select IsSimple(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
IsSimple(PolyFromWKB(0x0103000000020000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000500000000000000000000400000000000000040000000
1
1 expected
Select IsSimple(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
IsSimple(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000
1
1 expected
#WKB data, big-endian format
Select IsSimple(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
IsSimple(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
1
1 expected
Select IsSimple(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
IsSimple(PolyFromWKB(0x0000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000540000000000000004000000000000000400000
1
1 expected
Select IsSimple(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
IsSimple(MPolyFromWKB(0x000000000600000002000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000044000000000000000400
0
0 expected
Select IsSimple(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
IsSimple(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
0
0 expected
Select IsSimple(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));
IsSimple(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'))
0
0 expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))
0
0 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select IsSimple(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
IsSimple(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
0
0 expected
Select IsSimple(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
IsSimple(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select IsSimple(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
IsSimple(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
1
1 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select IsSimple(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
IsSimple(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
1
1 expected
Select IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
1
1 expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
1
1 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
1
1 expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
1
1 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
1
1 expected
Select IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select IsSimple(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
IsSimple(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
1
1 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select IsSimple(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
IsSimple(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
1
1 expected
Select IsSimple();
ERROR 42000: Incorrect parameter count in the call to native function 'IsSimple'
Select IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsSimple(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsSimple(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsSimple(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsSimple(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
1
1 expected
Select IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
1
1 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
1
1 expected
#Invalid WKB data
Select IsSimple(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsSimple(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsSimple(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsSimple(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the IsEmpty for the Polygon and the MulytiPolygon class 
select fid,IsEmpty(g) from gis_polygon where g is not NULL;
fid	IsEmpty(g)
301	0
302	0
303	0
304	0
305	0
306	0
307	0
308	0
309	0
310	0
311	0
312	0
315	0
318	0
329	0
339	0
340	0
341	0
342	0
select count(IsEmpty(g)) FROM gis_polygon;
count(IsEmpty(g))
19
18 expected
select fid,IsEmpty(g) from gis_multi_polygon where g is not NULL;
fid	IsEmpty(g)
601	0
602	0
603	0
604	0
605	0
606	0
607	0
608	0
609	0
610	0
611	0
612	0
624	0
636	0
select count(IsEmpty(g)) FROM gis_multi_polygon;
count(IsEmpty(g))
14
14 expected
#Checking the IsEmpty of some random Polygon and MultiPolygon.
Select IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));
IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'))
0
0 expected
Select IsEmpty(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
IsEmpty(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
0
0 expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))
0
0 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
IsEmpty(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
0 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
0
0 expected
select IsEmpty(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));
IsEmpty(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'))
0
0 expected
#WKB data, little-endian format
Select IsEmpty(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
IsEmpty(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
0
0 expected
Select IsEmpty(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
IsEmpty(PolyFromWKB(0x01030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000005000000000000000000004000000000000000400000000
0
0 expected
Select IsEmpty(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
IsEmpty(MPolyFromWKB(0x0106000000020000000103000000010000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000103000000010000000500000000
0
0 expected
#WKB data, big-endian format
Select IsEmpty(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
IsEmpty(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
0
0 expected
Select IsEmpty(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
IsEmpty(PolyFromWKB(0x00000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000005400000000000000040000000000000004000000
0
0 expected
Select IsEmpty(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
IsEmpty(MPolyFromWKB(0x0000000006000000020000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000440000000000000004000
0
0 expected
Select IsEmpty(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
IsEmpty(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
0
0 expected
Select IsEmpty(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));
IsEmpty(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'))
0
0 expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))
0
0 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
IsEmpty(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
0 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
0
0 expected
Select IsEmpty(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
IsEmpty(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select IsEmpty(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
IsEmpty(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
0
0 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
IsEmpty(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
0
0 expected
Select IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select IsEmpty(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
IsEmpty(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
0
0 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 000
0
0 expected
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
IsEmpty(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.99
0
0 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
0
0 expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
0
0 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
0
0 expected
Select IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select IsEmpty(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
IsEmpty(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
0
0 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
IsEmpty(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
0
0 expected
Select IsEmpty();
ERROR 42000: Incorrect parameter count in the call to native function 'IsEmpty'
Select IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsEmpty(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsEmpty(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsEmpty(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsEmpty(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
1
1 expected
Select IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
1
1 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
1
1 expected
#Invalid WKB data
Select IsEmpty(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsEmpty(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsEmpty(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select IsEmpty(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the Area for the Polygon and the MulytiPolygon class 
select fid,Area(g) from gis_polygon where g is not NULL;
fid	Area(g)
301	100
302	2400
303	450
304	100
305	2400
306	450
307	0
308	0
309	0
310	0
311	0
312	198
315	0
318	0
329	0
339	0
340	0
341	0
342	0
select count(Area(g)) FROM gis_polygon;
count(Area(g))
19
18 expected
select fid,Area(g) from gis_multi_polygon where g is not NULL;
fid	Area(g)
601	1684.5
602	1684.5
603	4.5
604	1684.5
605	1684.5
606	4.5
607	0
608	0
609	0
610	0
611	0
612	0
624	0
636	0
select count(Area(g)) FROM gis_multi_polygon;
count(Area(g))
14
14 expected
#Checking the Area of some random Polygon and MultiPolygon.
Select Area(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
10.5
10.5 expected
Select Area(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Area(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
10.5
10.5 expected
select Area(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));
Area(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'))
0
0 expected
Select Area(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 1))'));
Area(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 1))'))
0
0 expected
Select Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));
Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'))
12
12 expected
Select Area(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (3 3, 2 5, 1 3, -1 2, 1 1, 3 3))'));
Area(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (3 3, 2 5, 1 3, -1 2, 1 1, 3 3))'))
6
6 expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3))))));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3))))))
6
6 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
9
9 expected
Select Area(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Area(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
9
9 expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3)))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3)))))))
6
6 expected
#WKB data, little-endian format
Select Area(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
Area(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
25
25 expected
Select Area(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
Area(PolyFromWKB(0x01030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000005000000000000000000004000000000000000400000000000
24
24 expected
Select Area(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
Area(MPolyFromWKB(0x0106000000020000000103000000010000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000103000000010000000500000000000
26
26 expected
#WKB data, big-endian format
Select Area(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
Area(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
25
25 expected
Select Area(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
Area(PolyFromWKB(0x00000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000005400000000000000040000000000000004000000000
21
21 expected
Select Area(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
Area(MPolyFromWKB(0x0000000006000000020000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000440000000000000004000000
35.5
35.5 expected
Select Area(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
Area(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select Area(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
Area(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b'))))));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b'))))))
0.005000000000000001
0.005000000000000001 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select Area(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));
Area(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'))
NULL
NULL expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b')))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b')))))))
0.005000000000000001
0.005000000000000001 expected
Select Area(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Area(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
2394438914.547233
2394438914.547233 expected
Select Area(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Area(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
2394438914.547233
2394438914.547233 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,
2394438914.547233
2394438914.547233 expected
Select Area(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
Area(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 
2394438914.547233
2394438914.547233 expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
2394438914.547233
2394438914.547233 expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
0.050000000000000266
0.050000000000000266 expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
0.050000000000000266
0.050000000000000266 expected
Select Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select Area(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
Area(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
5555.5
5555.5 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select Area(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));
Area(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'))
NULL
NULL expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
5555.5
5555.5 expected
Select Area();
ERROR 42000: Incorrect parameter count in the call to native function 'Area'
Select Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Area(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Area(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
0
0 expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))))
1
1 expected
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Area(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Area(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'))
1
1 expected
Select Area(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
Area(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))))
0
0 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))
1
1 expected
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));
Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'))
1
1 expected
#Invalid WKB data
Select Area(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Area(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Area(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select Area(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the ExteriorRing for the Polygon class 
select fid,AsText(ExteriorRing(g)) from gis_polygon where g is not NULL;
fid	AsText(ExteriorRing(g))
301	LINESTRING(10 10,20 10,20 20,10 20,10 10)
302	LINESTRING(0 0,50 0,50 50,0 50,0 0)
303	LINESTRING(0 0,30 0,30 30,0 0)
304	LINESTRING(10 10,20 10,20 20,10 20,10 10)
305	LINESTRING(0 0,50 0,50 50,0 50,0 0)
306	LINESTRING(0 0,30 0,30 30,0 0)
307	LINESTRING(0 0,0 0,0 0,0 0,0 0)
308	LINESTRING(0 0,0 0,0 0,0 0,0 0)
309	LINESTRING(0 0,0 0,0 0,0 0)
310	LINESTRING(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1)
311	LINESTRING(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1)
312	LINESTRING(0 0,30 0,30 30,1 0,0 2,5 0,0 6,0 0,0 9,54 0,10 0,13 0,20 0,0 40,0 5,0 4,0 3,0 2,0 1,0 90,0 9,90 0,30 0,60 0,20 0,90 90,70 50,0 0)
315	LINESTRING(1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65)
318	LINESTRING(0 0,0 0,0 0,0 0)
329	LINESTRING(0 0,1 1,2 2,1 1,0 0)
339	LINESTRING(0 0,1 1,2 2,1 1,0 0)
340	LINESTRING(0 0,1 1,2 2,1 1,0 0)
341	LINESTRING(0 0,1 1,2 2,1 1,0 0)
342	LINESTRING(0 0,1 1,2 2,1 1,0 0)
select count(AsText(ExteriorRing(g))) FROM gis_polygon;
count(AsText(ExteriorRing(g)))
19
18 expected
#Checking the ExteriorRing of some random Polygon.
Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')))
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1)
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')));
AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')))
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1)
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1) expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1)))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1)))))))
LINESTRING(1 1,10 1,1 0,10 0,0 -2,1 1)
LINESTRING(1 1,10 1,1 0,10 0,0 -2,1 1) expected
#WKB data, little-endian format
Select AsText(ExteriorRing(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));
AsText(ExteriorRing(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)))
LINESTRING(0 0,0 5,5 5,5 0,0 0)
LINESTRING(0 0,0 5,5 5,5 0,0 0) expected
Select AsText(ExteriorRing(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));
AsText(ExteriorRing(PolyFromWKB(0x01030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000005000000000000000000004000000000000
LINESTRING(0 0,0 5,5 5,5 0,0 0)
LINESTRING(0 0,0 5,5 5,5 0,0 0) expected
#WKB data, big-endian format
Select AsText(ExteriorRing(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));
AsText(ExteriorRing(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)))
LINESTRING(0 0,0 5,5 5,5 0,0 0)
LINESTRING(0 0,0 5,5 5,5 0,0 0) expected
Select AsText(ExteriorRing(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));
AsText(ExteriorRing(PolyFromWKB(0x00000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000005400000000000000040000000000
LINESTRING(0 0,0 5,5 5,5 0,0 0)
LINESTRING(0 0,0 5,5 5,5 0,0 0) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')))
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1)
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));
AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')))
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1)
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1) expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))))
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1)
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))')))
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1)
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))')));
AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))')))
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1)
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1) expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1)))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1)))))))
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1)
LINESTRING(1 1,10 1,9 2,8 1,7 2,6 1,1 1) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')))
NULL
NULL expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));
AsText(ExteriorRing(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')))
NULL
NULL expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
LINESTRING(0.1 0,0 -0,-0 0,0.1 0)
LINESTRING(0.1 0,0 -0,-0 0,0.1 0) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))')))
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2)
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (-2 -2, -2 2, 2 -2, 2 2, -2 -2))')));
AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (-2 -2, -2 2, 2 -2, 2 2, -2 -2))')))
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2)
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))')));
AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))')))
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2)
LINESTRING(-2 -2,-2 2,2 -2,2 2,-2 -2) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')))
LINESTRING(0 0,5 0,5 5,0 5,0 0,-5 0,-5 5,0 5,0 0)
LINESTRING(0 0,5 0,5 5,0 5,0 0,-5 0,-5 5,0 5,0 0) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 1 0, 1 5, 0 5, 0 0))')));
AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 1 0, 1 5, 0 5, 0 0))')))
LINESTRING(0 0,5 0,5 5,0 5,0 0)
LINESTRING(0 0,5 0,5 5,0 5,0 0) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (1 1))')));
AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (1 1))')))
LINESTRING(0 0,5 0,5 5,0 5,0 0)
LINESTRING(0 0,5 0,5 5,0 5,0 0) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')))
LINESTRING(-5 5,5 5,5 -5,-5 -5,-5 5)
LINESTRING(-5 5,5 5,5 -5,-5 -5,-5 5) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')));
AsText(ExteriorRing(PolyFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')))
LINESTRING(-5 5,5 5,5 -5,-5 -5,-5 5)
LINESTRING(-5 5,5 5,5 -5,-5 -5,-5 5) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 2, 2 2, 2 -2, -2 -2, -2 2), (-5 5, 5 5, 5 -5, -5 -5, -5 5))')));
AsText(ExteriorRing(PolyFromText('POLYGON((-2 2, 2 2, 2 -2, -2 -2, -2 2), (-5 5, 5 5, 5 -5, -5 -5, -5 5))')))
LINESTRING(-2 2,2 2,2 -2,-2 -2,-2 2)
LINESTRING(-2 2,2 2,2 -2,-2 -2,-2 2) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251)
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251) expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(ExteriorRing(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251)
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251) expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251)
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251) expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
LINESTRING(0.1 0,1 1,2 2,0.1 0)
LINESTRING(0.1 0,1 1,2 2,0.1 0) expected
Select AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));
AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(ExteriorRing(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));
AsText(ExteriorRing(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
LINESTRING(0 0,1 0,0 -11111,0 0)
LINESTRING(0 0,1 0,0 -11111,0 0) expected
Select AsText(ExteriorRing());
ERROR 42000: Incorrect parameter count in the call to native function 'ExteriorRing'
Select AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(ExteriorRing(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));
AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(ExteriorRing(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))))
NULL
NULL expected
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));
AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')))
0
0 expected
#Invalid WKB data
Select AsText(ExteriorRing(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(ExteriorRing(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
#Checking the InteriorRingN for the Polygon class 
select fid,AsText(InteriorRingN(g, 0)) from gis_polygon where g is not NULL;
fid	AsText(InteriorRingN(g, 0))
301	NULL
302	NULL
303	NULL
304	NULL
305	NULL
306	NULL
307	NULL
308	NULL
309	NULL
310	NULL
311	NULL
312	NULL
315	NULL
318	NULL
329	NULL
339	NULL
340	NULL
341	NULL
342	NULL
select fid,AsText(InteriorRingN(g, 1)) from gis_polygon where g is not NULL;
fid	AsText(InteriorRingN(g, 1))
301	NULL
302	LINESTRING(10 10,20 10,20 20,10 20,10 10)
303	NULL
304	NULL
305	LINESTRING(10 10,20 10,20 20,10 20,10 10)
306	NULL
307	NULL
308	LINESTRING(0 0,0 0,0 0,0 0,0 0)
309	NULL
310	NULL
311	LINESTRING(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1)
312	NULL
315	NULL
318	NULL
329	NULL
339	NULL
340	NULL
341	NULL
342	NULL
select fid,AsText(InteriorRingN(g, 2)) from gis_polygon where g is not NULL;
fid	AsText(InteriorRingN(g, 2))
301	NULL
302	NULL
303	NULL
304	NULL
305	NULL
306	NULL
307	NULL
308	NULL
309	NULL
310	NULL
311	NULL
312	NULL
315	NULL
318	NULL
329	NULL
339	NULL
340	NULL
341	NULL
342	NULL
select fid,AsText(InteriorRingN(g, 3)) from gis_polygon where g is not NULL;
fid	AsText(InteriorRingN(g, 3))
301	NULL
302	NULL
303	NULL
304	NULL
305	NULL
306	NULL
307	NULL
308	NULL
309	NULL
310	NULL
311	NULL
312	NULL
315	NULL
318	NULL
329	NULL
339	NULL
340	NULL
341	NULL
342	NULL
select count(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
count(AsText(InteriorRingN(g, 1)))
4
4 expected
#Checking the InteriorRingN of some random Polygon.
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1))
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1)
LINESTRING(1 1,10 1,1 0,10 0,1 -1,10 -1,-9 -2,1 1) expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))), 1))
NULL
NULL expected
#WKB data, little-endian format
Select AsText(InteriorRingN(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000),0));
AsText(InteriorRingN(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000),0))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040),1));
AsText(InteriorRingN(PolyFromWKB(0x0103000000020000000500000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000014400000000000000000000000000000000000000000000000000500000000000000000000400000000000
LINESTRING(2 2,2 3,3 3,3 2,2 2)
LINESTRING(2 2,2 3,3 3,3 2,2 2) expected
#WKB data, big-endian format
Select AsText(InteriorRingN(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000),1));
AsText(InteriorRingN(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000),1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000),1));
AsText(InteriorRingN(PolyFromWKB(0x0000000003000000020000000500000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000040140000000000000000000000000000000000000000000000000000000000000000000540000000000000004000000000
LINESTRING(2 2,2 4,4 4,4 2,2 2)
LINESTRING(2 2,2 4,4 4,4 2,2 2) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1))
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1)
LINESTRING(1 1,2 -1,3 1,5 2,3 3,2 5,1 3,-1 2,1 1) expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'), 0.0));
AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'), 0.0))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'), 1.0));
AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'), 1.0))
LINESTRING(6 1,7 0,8 1,9 0,10 1,6 1)
LINESTRING(6 1,7 0,8 1,9 0,10 1,6 1) expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))), .1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))), .1))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'), 1.1));
AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'), 1.1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 'ë'));
AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 'ë'))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))), -1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))), -1))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'), -1));
AsText(InteriorRingN(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'), -1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 1))
LINESTRING(0 0)
LINESTRING(0 0) expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 2));
AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 2))
LINESTRING(5 5,6 5,6 6,5 6,5 5)
LINESTRING(5 5,6 5,6 6,5 6,5 5) expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'), 2-1));
AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'), 2-1))
LINESTRING(1 1)
LINESTRING(1 1) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'), 1))
LINESTRING(0 0,0 5,5 5,5 0,0 0)
LINESTRING(0 0,0 5,5 5,5 0,0 0) expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'), 1))
LINESTRING(-100 -100)
LINESTRING(-100 -100) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1))
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4)
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2))
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3)
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 3));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 3))
LINESTRING(-2 2,-2 -2,2 -2,2 2,-2 2)
LINESTRING(-2 2,-2 -2,2 -2,2 2,-2 2) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 4));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 4))
LINESTRING(-1 1,1 1,1 -1,-1 -1,-1 1)
LINESTRING(-1 1,1 1,1 -1,-1 -1,-1 1) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 5));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 5))
LINESTRING(0 0)
LINESTRING(0 0) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 6));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 6))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), -1));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), -1))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1.0));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1.0))
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4)
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0.9));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0.9))
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4)
LINESTRING(-4 4,-4 -4,4 -4,4 4,-4 4) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.4));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.4))
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3)
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.000001));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.000001))
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3)
LINESTRING(-3 3,3 3,3 -3,-3 -3,-3 3) expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111));
AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 111111111111111111111111111111111111111
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1))
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251)
LINESTRING(0.9999 7654.24251,634736.736354 1.0987,9087.9097 0,0.9999 7654.24251) expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'), 1));
AsText(InteriorRingN(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))), 1))
NULL
NULL expected
Select AsText(InteriorRingN());
ERROR 42000: Incorrect parameter count in the call to native function 'InteriorRingN'
Select AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1)) = AsText(InteriorRingN(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))), 1));
AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1)) = AsText(InteriorRingN(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))), 1))
NULL
NULL expected
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))), 1)) = AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'), 1));
AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))), 1)) = AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'), 1))
NULL
NULL expected
#Invalid WKB data
Select AsText(InteriorRingN(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,1));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(InteriorRingN(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,1));
ERROR HY000: Geometry byte string must be little endian.
#Checking the NumInteriorRings for the Polygon class 
select fid,NumInteriorRings(g) from gis_polygon where g is not NULL;
fid	NumInteriorRings(g)
301	0
302	1
303	0
304	0
305	1
306	0
307	0
308	1
309	0
310	0
311	1
312	0
315	0
318	0
329	0
339	0
340	0
341	0
342	0
select count(NumInteriorRings(g)) FROM gis_polygon;
count(NumInteriorRings(g))
19
18 expected
#Checking the NumInteriorRings of some random Polygon.
Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'));
NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'));
NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'))
1
1 expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))))
0
0 expected
#WKB data, little-endian format
Select NumInteriorRings(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
NumInteriorRings(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000))
0
0 expected
Select NumInteriorRings(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));
NumInteriorRings(PolyFromWKB(0x01030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000005000000000000000000004000000000000000
1
1 expected
#WKB data, big-endian format
Select NumInteriorRings(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
NumInteriorRings(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000))
0
0 expected
Select NumInteriorRings(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));
NumInteriorRings(PolyFromWKB(0x00000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000005400000000000000040000000000000
1
1 expected
Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));
NumInteriorRings(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));
NumInteriorRings(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'))
1
1 expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))))
0
0 expected
Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'));
NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'));
NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'))
1
1 expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))))
0
0 expected
Select NumInteriorRings(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));
NumInteriorRings(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'))
NULL
NULL expected
Select NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));
NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'))
NULL
NULL expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))
0
0 expected
Select NumInteriorRings(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'));
NumInteriorRings(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));
NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'))
2
2 expected
Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));
NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'))
2
2 expected
Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'));
NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'))
1
1 expected
Select NumInteriorRings(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'));
NumInteriorRings(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'));
NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'))
1
1 expected
Select NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'));
NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'))
1
1 expected
Select NumInteriorRings(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'));
NumInteriorRings(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'))
5
5 expected
Select NumInteriorRings(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
NumInteriorRings(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
0 expected
Select NumInteriorRings(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
NumInteriorRings(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
1
1 expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))
0
0 expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))
0
0 expected
Select NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));
NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select NumInteriorRings(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));
NumInteriorRings(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'))
NULL
NULL expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))
0
0 expected
Select NumInteriorRings());
ERROR 42000: Incorrect parameter count in the call to native function 'NumInteriorRings'
Select NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = NumInteriorRings(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));
NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = NumInteriorRings(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))))
NULL
NULL expected
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = NumInteriorRings(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));
NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = NumInteriorRings(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'))
1
1 expected
#Invalid WKB data
Select NumInteriorRings(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
Select NumInteriorRings(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
ERROR HY000: Geometry byte string must be little endian.
#Checking the Centroid for the Polygon and the MulytiPolygon class 
select fid,AsText(Centroid(g)) from gis_polygon where g is not NULL;
fid	AsText(Centroid(g))
301	POINT(15 15)
302	POINT(25.416666666666668 25.416666666666668)
303	POINT(20 10)
304	POINT(15 15)
305	POINT(25.416666666666668 25.416666666666668)
306	POINT(20 10)
307	POINT(0 0)
308	POINT(0 0)
309	POINT(0 0)
310	POINT(1 1)
311	POINT(0 0)
312	POINT(19.37037037037037 12.62962962962963)
315	POINT(1.0000000000000001e65 1.0000000000000001e65)
318	POINT(0 0)
329	POINT(1 1)
339	POINT(1 1)
340	POINT(1 1)
341	POINT(1 1)
342	POINT(1 1)
select count(AsText(Centroid(g))) FROM gis_polygon;
count(AsText(Centroid(g)))
19
18 expected
select fid,AsText(Centroid(g)) from gis_multi_polygon where g is not NULL;
fid	AsText(Centroid(g))
601	POINT(55.58852775304245 17.426536064113982)
602	POINT(55.58852775304245 17.426536064113982)
603	POINT(2 2)
604	POINT(55.58852775304245 17.426536064113982)
605	POINT(55.58852775304245 17.426536064113982)
606	POINT(2 2)
607	POINT(0 0)
608	POINT(0 0)
609	POINT(0 0)
610	POINT(0 0)
611	POINT(0 0)
612	POINT(0 0)
624	POINT(0 0)
636	POINT(0 0)
select count(AsText(Centroid(g))) FROM gis_multi_polygon;
count(AsText(Centroid(g)))
14
14 expected
#Checking the Centroid of some random Polygon and MultiPolygon.
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));
AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')))
POINT(5.5 0)
POINT(5.5 0) expected
Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));
AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')))
POINT(0 0)
POINT(0 0) expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))))
POINT(5 0.3333333333333333)
POINT(5 0.3333333333333333) expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')))
POINT(4 -0.25)
POINT(4 -0.25) expected
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));
AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')))
POINT(4 -0.25)
POINT(4 -0.25) expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))))
POINT(5 0.3333333333333333)
POINT(5 0.3333333333333333) expected
#WKB data, little-endian format
Select AsText(Centroid(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));
AsText(Centroid(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)))
POINT(2.5 2.5)
POINT(2.5 2.5) expected
Select AsText(Centroid(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));
AsText(Centroid(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004
POINT(2.5 2.5)
POINT(2.5 2.5) expected
Select AsText(Centroid(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));
AsText(Centroid(MPolyFromWKB(0x01060000000200000001030000000100000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000001030000000100000005
POINT(2.5 2.5)
POINT(2.5 2.5) expected
#WKB data, big-endian format
Select AsText(Centroid(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));
AsText(Centroid(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)))
POINT(2.5 2.5)
POINT(2.5 2.5) expected
Select AsText(Centroid(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));
AsText(Centroid(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000
POINT(2.4047619047619047 2.4047619047619047)
POINT(2.4047619047619047 2.4047619047619047) expected
Select AsText(Centroid(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000)));
AsText(Centroid(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000
POINT(2.1971830985915495 2.7464788732394365)
POINT(2.1971830985915495 2.7464788732394365) expected
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));
AsText(Centroid(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')))
POINT(2 2)
POINT(2 2) expected
Select AsText(Centroid(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 1 1))')));
AsText(Centroid(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 1 1))')))
POINT(2 2.333333333333333)
POINT(2 2.333333333333333) expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))))
POINT(2 2)
POINT(2 2) expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')))
POINT(2 1.9999999999999998)
POINT(2 1.9999999999999998) expected
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')));
AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')))
POINT(2 1.9999999999999998)
POINT(2 1.9999999999999998) expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))))))
POINT(2 2)
POINT(2 2) expected
Select AsText(Centroid(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));
AsText(Centroid(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')))
NULL
NULL expected
Select AsText(Centroid(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));
AsText(Centroid(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')))
NULL
NULL expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))))
POINT(0.03333333333333333 0)
POINT(0.03333333333333333 0) expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')))
NULL
NULL expected
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));
AsText(Centroid(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')))
NULL
NULL expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))))
POINT(0.03333333333333333 0)
POINT(0.03333333333333333 0) expected
Select AsText(Centroid(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(Centroid(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
POINT(214608.54865133335 2551.780403333333)
POINT(214608.54865133335 2551.780403333333) expected
Select AsText(Centroid(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));
AsText(Centroid(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')))
POINT(0 0)
POINT(0 0) expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
POINT(214608.54865133335 2551.780403333333)
POINT(214608.54865133335 2551.780403333333) expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.
POINT(0 0)
expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))))
POINT(214608.54865133335 2551.780403333333)
POINT(214608.54865133335 2551.780403333333) expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))))
POINT(1.0333333333333334 1)
POINT(1.0333333333333334 1) expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))))
POINT(1.0333333333333334 1)
POINT(1.0333333333333334 1) expected
Select AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));
AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(Centroid(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));
AsText(Centroid(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')))
NULL
NULL expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
POINT(0.3333333333333333 -3703.6666666666665)
POINT(0.3333333333333333 -3703.6666666666665) expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')))
NULL
NULL expected
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));
AsText(Centroid(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')))
NULL
NULL expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))))
POINT(0.3333333333333333 -3703.6666666666665)
POINT(0.3333333333333333 -3703.6666666666665) expected
Select AsText(Centroid());
ERROR 42000: Incorrect parameter count in the call to native function 'Centroid'
Select AsText(Centroid(PolygonFromText('POLYGON((1234.7777665 -35242.89876, -0276354.77777 -1111.0000, 22222.989898 0000000.2322322 ,1234.7777665 -35242.89876))')));
AsText(Centroid(PolygonFromText('POLYGON((1234.7777665 -35242.89876, -0276354.77777 -1111.0000, 22222.989898 0000000.2322322 ,1234.7777665 -35242.89876))')))
POINT(-84299.0033685 -12117.8888426)
POINT(-84299.0033685 -12117.8888426) expected
Select AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));
AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))))
NULL
NULL expected
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Centroid(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));
AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Centroid(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')))
0
0 expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))))
0
0 expected
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Centroid(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')));
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Centroid(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')))
0
0 expected
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))));
AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))))
0
0 expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')))
1
1 expected
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')));
AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')))
1
1 expected
#Invalid WKB data
Select AsText(Centroid(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Centroid(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Centroid(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
Select AsText(Centroid(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000));
ERROR HY000: Geometry byte string must be little endian.
#Checking the procedure with the Attribute of Polygon and MultPolygon class
#create procedure to check Attributes
CREATE PROCEDURE poly_attri()
BEGIN
Select GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Select SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
Select SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Select Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
Select AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));
Select IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Select IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Select Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')));
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));
Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));
END |
#call the proc
CALL poly_attri;
GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'))
POLYGON
GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
MULTIPOLYGON
SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
0
SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'))
0
Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'))
2
Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))))
2
AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))))
POLYGON((1 -2,10 -2,10 2,1 2,1 -2))
IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
1
IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))))
1
IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'))
0
IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'))
0
Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'))
12
Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))))
2394438914.547233
AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')))
LINESTRING(0 0,5 0,5 5,0 5,0 0,-5 0,-5 5,0 5,0 0)
AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1))
NULL
NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'))
2
AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')))
POINT(5.5 0)
AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))))
POINT(1.0333333333333334 1)
POLYGON expected
MULTIPOLYGON expected
0 expected
0 expected
2 expected
2 expected
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
POLYGON((1 -2,10 -2,10 2,1 2,1 -2)) expected
1 expected
1 expected
0 expected
0 expected
12 expected
2394438914.547233 expected
LINESTRING(0 0,5 0,5 5,0 5,0 0,-5 0,-5 5,0 5,0 0) expected
NULL expected
2 expected
POINT(5.5 0) expected
POINT(1.0333333333333334 1) expected
#Dropping the created procedures.
drop procedure poly_attri;
#Checking the Polygon and MultiPolygon properties from within the cursor 
CREATE TABLE gis_polygon_cursor select * from gis_polygon limit 1;
CREATE PROCEDURE poly_attri_cursor()
BEGIN
DECLARE v POLYGON;
DECLARE c CURSOR FOR Select g from gis_polygon_cursor;
OPEN c;
FETCH c INTO v;
Select AsText(v);
Select GeometryType(v);
Select SRID(v);
Select Dimension(v);
Select AsText(Envelope(v));
Select IsSimple(v);
Select IsEmpty(v);
Select Area(v);
Select AsText(ExteriorRing(v));
Select AsText(InteriorRingN(v, 1));
Select NumInteriorRings(v);
Select AsText(Centroid(v));
CLOSE c;
END|
#Calling the cursor
CALL poly_attri_cursor();
AsText(v)
POLYGON((10 10,20 10,20 20,10 20,10 10))
GeometryType(v)
POLYGON
SRID(v)
0
Dimension(v)
2
AsText(Envelope(v))
POLYGON((10 10,20 10,20 20,10 20,10 10))
IsSimple(v)
1
IsEmpty(v)
0
Area(v)
100
AsText(ExteriorRing(v))
LINESTRING(10 10,20 10,20 20,10 20,10 10)
AsText(InteriorRingN(v, 1))
NULL
NumInteriorRings(v)
0
AsText(Centroid(v))
POINT(15 15)
#Dropping the created cursor
drop procedure poly_attri_cursor;
drop table gis_polygon_cursor;
#Checking the Self join with the Polygon and MultiPolygon Attributes 
check self join
SELECT GeometryType(a.g), SRID(a.g), Dimension(a.g), IsSimple(a.g), IsClosed(a.g),
AsText(Envelope(a.g)), IsSimple(a.g), IsEmpty(a.g), Area(a.g), AsText(ExteriorRing(a.g)),
AsText(InteriorRingN(a.g, 1)), NumInteriorRings(a.g), AsText(Centroid(a.g)) 
FROM gis_polygon a,gis_polygon b WHERE GeometryType(a.g)=GeometryType(b.g) AND 
SRID(a.g)=SRID(b.g) AND Dimension(a.g)=Dimension(b.g) AND Envelope(a.g)=Envelope(b.g) AND 
IsSimple(a.g)=IsSimple(b.g) AND IsEmpty(a.g)=IsEmpty(b.g) AND Area(a.g)=Area(b.g) AND
ExteriorRing(a.g)=ExteriorRing(b.g) AND InteriorRingN(a.g, 1)=InteriorRingN(b.g, 1) AND 
NumInteriorRings(a.g)=NumInteriorRings(b.g) and Centroid(a.g)=Centroid(a.g);
GeometryType(a.g)	SRID(a.g)	Dimension(a.g)	IsSimple(a.g)	IsClosed(a.g)	AsText(Envelope(a.g))	IsSimple(a.g)	IsEmpty(a.g)	Area(a.g)	AsText(ExteriorRing(a.g))	AsText(InteriorRingN(a.g, 1))	NumInteriorRings(a.g)	AsText(Centroid(a.g))
POLYGON	0	2	1	NULL	POLYGON((0 0,50 0,50 50,0 50,0 0))	1	0	2400	LINESTRING(0 0,50 0,50 50,0 50,0 0)	LINESTRING(10 10,20 10,20 20,10 20,10 10)	1	POINT(25.416666666666668 25.416666666666668)
POLYGON	0	2	1	NULL	POLYGON((0 0,50 0,50 50,0 50,0 0))	1	0	2400	LINESTRING(0 0,50 0,50 50,0 50,0 0)	LINESTRING(10 10,20 10,20 20,10 20,10 10)	1	POINT(25.416666666666668 25.416666666666668)
POLYGON	0	2	1	NULL	POLYGON((0 0,50 0,50 50,0 50,0 0))	1	0	2400	LINESTRING(0 0,50 0,50 50,0 50,0 0)	LINESTRING(10 10,20 10,20 20,10 20,10 10)	1	POINT(25.416666666666668 25.416666666666668)
POLYGON	0	2	1	NULL	POLYGON((0 0,50 0,50 50,0 50,0 0))	1	0	2400	LINESTRING(0 0,50 0,50 50,0 50,0 0)	LINESTRING(10 10,20 10,20 20,10 20,10 10)	1	POINT(25.416666666666668 25.416666666666668)
POLYGON	0	2	0	NULL	POLYGON((0 0,0 0,0 0,0 0,0 0))	0	0	0	LINESTRING(0 0,0 0,0 0,0 0,0 0)	LINESTRING(0 0,0 0,0 0,0 0,0 0)	1	POINT(0 0)
POLYGON	0	2	0	NULL	POLYGON((1 1,1 1,1 1,1 1,1 1))	0	0	0	LINESTRING(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1)	LINESTRING(1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1)	1	POINT(0 0)
#Checking the aggregate functions on the Line and MultiLine Attributes 
#Checking the SUM function
select SUM(GeometryType(g)) FROM gis_polygon;
SUM(GeometryType(g))
0
0 Expected
select SUM(GeometryType(g)) FROM gis_multi_polygon;
SUM(GeometryType(g))
0
0 Expected
select SUM(SRID(g)) FROM gis_polygon;
SUM(SRID(g))
0
0 Expected
select SUM(SRID(g)) FROM gis_multi_polygon;
SUM(SRID(g))
0
0 Expected
select SUM(Dimension(g)) FROM gis_polygon;
SUM(Dimension(g))
38
36 Expected
select SUM(Dimension(g)) FROM gis_multi_polygon;
SUM(Dimension(g))
28
28 Expected
select SUM(AsText(Envelope(g))) FROM gis_polygon;
SUM(AsText(Envelope(g)))
0
0 Expected
select SUM(AsText(Envelope(g))) FROM gis_multi_polygon;
SUM(AsText(Envelope(g)))
0
0 Expected
select SUM(IsSimple(g)) FROM gis_polygon;
SUM(IsSimple(g))
15
14 Expected
select SUM(IsSimple(g)) FROM gis_multi_polygon;
SUM(IsSimple(g))
11
11 Expected
select SUM(IsEmpty(g)) FROM gis_polygon;
SUM(IsEmpty(g))
0
0 Expected
select SUM(IsEmpty(g)) FROM gis_multi_polygon;
SUM(IsEmpty(g))
0
0 Expected
select SUM(Area(g)) FROM gis_polygon;
SUM(Area(g))
6098
6098 Expected
select SUM(Area(g)) FROM gis_multi_polygon;
SUM(Area(g))
6747
6747 Expected
select SUM(AsText(ExteriorRing(g))) FROM gis_polygon;
SUM(AsText(ExteriorRing(g)))
0
0 Expected
select SUM(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
SUM(AsText(InteriorRingN(g, 1)))
0
0 Expected
select SUM(NumInteriorRings(g)) FROM gis_polygon;
SUM(NumInteriorRings(g))
4
4 Expected
select SUM(AsText(Centroid(g))) FROM gis_polygon;
SUM(AsText(Centroid(g)))
0
0 Expected
select SUM(AsText(Centroid(g))) FROM gis_multi_polygon;
SUM(AsText(Centroid(g)))
0
0 Expected
#Checking the MIN function
select MIN(GeometryType(g)) FROM gis_polygon;
MIN(GeometryType(g))
POLYGON
POLYGON Expected
select MIN(GeometryType(g)) FROM gis_multi_polygon;
MIN(GeometryType(g))
MULTIPOLYGON
MULTIPOLYGON Expected
select MIN(SRID(g)) FROM gis_polygon;
MIN(SRID(g))
0
0 Expected
select MIN(SRID(g)) FROM gis_multi_polygon;
MIN(SRID(g))
0
0 Expected
select MIN(Dimension(g)) FROM gis_polygon;
MIN(Dimension(g))
2
2 Expected
select MIN(Dimension(g)) FROM gis_multi_polygon;
MIN(Dimension(g))
2
2 Expected
select MIN(AsText(Envelope(g))) FROM gis_polygon;
MIN(AsText(Envelope(g)))
POLYGON((0 0,0 0,0 0,0 0,0 0))
POLYGON((0 0,0 0,0 0,0 0,0 0)) Expected
select MIN(AsText(Envelope(g))) FROM gis_multi_polygon;
MIN(AsText(Envelope(g)))
POLYGON((0 0,0 0,0 0,0 0,0 0))
POLYGON((0 0,0 0,0 0,0 0,0 0)) Expected
select MIN(IsSimple(g)) FROM gis_polygon;
MIN(IsSimple(g))
0
0 Expected
select MIN(IsSimple(g)) FROM gis_multi_polygon;
MIN(IsSimple(g))
0
0 Expected
select MIN(IsEmpty(g)) FROM gis_polygon;
MIN(IsEmpty(g))
0
0 Expected
select MIN(IsEmpty(g)) FROM gis_multi_polygon;
MIN(IsEmpty(g))
0
0 Expected
select MIN(Area(g)) FROM gis_polygon;
MIN(Area(g))
0
0 Expected
select MIN(Area(g)) FROM gis_multi_polygon;
MIN(Area(g))
0
0 Expected
select MIN(AsText(ExteriorRing(g))) FROM gis_polygon;
MIN(AsText(ExteriorRing(g)))
LINESTRING(0 0,0 0,0 0,0 0)
LINESTRING(0 0,0 0,0 0,0 0) Expected
select MIN(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
MIN(AsText(InteriorRingN(g, 1)))
LINESTRING(0 0,0 0,0 0,0 0,0 0)
LINESTRING(0 0,0 0,0 0,0 0,0 0) Expected
select MIN(NumInteriorRings(g)) FROM gis_polygon;
MIN(NumInteriorRings(g))
0
0 Expected
select MIN(AsText(Centroid(g))) FROM gis_polygon;
MIN(AsText(Centroid(g)))
POINT(0 0)
POINT(0 0) Expected
select MIN(AsText(Centroid(g))) FROM gis_multi_polygon;
MIN(AsText(Centroid(g)))
POINT(0 0)
POINT(0 0) Expected
#Checking the MAX function
select MAX(GeometryType(g)) FROM gis_polygon;
MAX(GeometryType(g))
POLYGON
POLYGON Expected
select MAX(GeometryType(g)) FROM gis_multi_polygon;
MAX(GeometryType(g))
MULTIPOLYGON
MULTIPOLYGON Expected
select MAX(SRID(g)) FROM gis_polygon;
MAX(SRID(g))
0
0 Expected
select MAX(SRID(g)) FROM gis_multi_polygon;
MAX(SRID(g))
0
0 Expected
select MAX(Dimension(g)) FROM gis_polygon;
MAX(Dimension(g))
2
2 Expected
select MAX(Dimension(g)) FROM gis_multi_polygon;
MAX(Dimension(g))
2
2 Expected
select MAX(AsText(Envelope(g))) FROM gis_polygon;
MAX(AsText(Envelope(g)))
POLYGON((1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65))
POLYGON((1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65)) Expected
select MAX(AsText(Envelope(g))) FROM gis_multi_polygon;
MAX(AsText(Envelope(g)))
POLYGON((28 0,84 0,84 42,28 42,28 0))
POLYGON((28 0,84 0,84 42,28 42,28 0)) Expected
select MAX(IsSimple(g)) FROM gis_polygon;
MAX(IsSimple(g))
1
1 Expected
select MAX(IsSimple(g)) FROM gis_multi_polygon;
MAX(IsSimple(g))
1
1 Expected
select MAX(IsEmpty(g)) FROM gis_polygon;
MAX(IsEmpty(g))
0
0 Expected
select MAX(IsEmpty(g)) FROM gis_multi_polygon;
MAX(IsEmpty(g))
0
0 Expected
select MAX(Area(g)) FROM gis_polygon;
MAX(Area(g))
2400
2400 Expected
select MAX(Area(g)) FROM gis_multi_polygon;
MAX(Area(g))
1684.5
1684.5 Expected
select MAX(AsText(ExteriorRing(g))) FROM gis_polygon;
MAX(AsText(ExteriorRing(g)))
LINESTRING(1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65)
LINESTRING(1e65 1e65,1e65 1e65,1e65 1e65,1e65 1e65) Expected
select MAX(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
MAX(AsText(InteriorRingN(g, 1)))
LINESTRING(10 10,20 10,20 20,10 20,10 10)
LINESTRING(10 10,20 10,20 20,10 20,10 10) Expected
select MAX(NuminteriorRings(g)) FROM gis_polygon;
MAX(NuminteriorRings(g))
1
1 Expected
select MAX(AsText(Centroid(g))) FROM gis_polygon;
MAX(AsText(Centroid(g)))
POINT(25.416666666666668 25.416666666666668)
POINT(25.416666666666668 25.416666666666668) Expected
select MAX(AsText(Centroid(g))) FROM gis_multi_polygon;
MAX(AsText(Centroid(g)))
POINT(55.58852775304245 17.426536064113982)
POINT(55.58852775304245 17.426536064113982) Expected
#Checking the STD function
select STD(GeometryType(g)) FROM gis_polygon;
STD(GeometryType(g))
0
0 Expected
select STD(GeometryType(g)) FROM gis_multi_polygon;
STD(GeometryType(g))
0
0 Expected
select STD(SRID(g)) FROM gis_polygon;
STD(SRID(g))
0
0 Expected
select STD(SRID(g)) FROM gis_multi_polygon;
STD(SRID(g))
0
0 Expected
select STD(Dimension(g)) FROM gis_polygon;
STD(Dimension(g))
0
0 Expected
select STD(Dimension(g)) FROM gis_multi_polygon;
STD(Dimension(g))
0
0 Expected
select STD(AsText(Envelope(g))) FROM gis_polygon;
STD(AsText(Envelope(g)))
0
0 Expected
select STD(AsText(Envelope(g))) FROM gis_multi_polygon;
STD(AsText(Envelope(g)))
0
0 Expected
select STD(IsSimple(g)) FROM gis_polygon;
STD(IsSimple(g))
0.4076824574955175
0.41573970964154905 Expected
select STD(IsSimple(g)) FROM gis_multi_polygon;
STD(IsSimple(g))
0.41032590332414487
0.41032590332414487 Expected
select STD(IsEmpty(g)) FROM gis_polygon;
STD(IsEmpty(g))
0
0 Expected
select STD(IsEmpty(g)) FROM gis_multi_polygon;
STD(IsEmpty(g))
0
0 Expected
select STD(Area(g)) FROM gis_polygon;
STD(Area(g))
726.4574080088726
742.3063575068328 Expected
select STD(Area(g)) FROM gis_multi_polygon;
STD(Area(g))
760.5744740735419
760.5744740735419 Expected
select STD(AsText(ExteriorRing(g))) FROM gis_polygon;
STD(AsText(ExteriorRing(g)))
0
0 Expected
select STD(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
STD(AsText(InteriorRingN(g, 1)))
0
0 Expected
select STD(NumInteriorRings(g)) FROM gis_polygon;
STD(NumInteriorRings(g))
0.40768245749551757
0.41573970964154905 Expected
select STD(AsText(Centroid(g))) FROM gis_polygon;
STD(AsText(Centroid(g)))
0
0 Expected
select STD(AsText(Centroid(g))) FROM gis_multi_polygon;
STD(AsText(Centroid(g)))
0
0 Expected
#Checking the AVG function
select AVG(GeometryType(g)) FROM gis_polygon;
AVG(GeometryType(g))
0
0 Expected
select AVG(GeometryType(g)) FROM gis_multi_polygon;
AVG(GeometryType(g))
0
0 Expected
select AVG(SRID(g)) FROM gis_polygon;
AVG(SRID(g))
0.0000
0.0000 Expected
select AVG(SRID(g)) FROM gis_multi_polygon;
AVG(SRID(g))
0.0000
0.0000 Expected
select AVG(Dimension(g)) FROM gis_polygon;
AVG(Dimension(g))
2.0000
2.0000 Expected
select AVG(Dimension(g)) FROM gis_multi_polygon;
AVG(Dimension(g))
2.0000
2.0000 Expected
select AVG(AsText(Envelope(g))) FROM gis_polygon;
AVG(AsText(Envelope(g)))
0
0 Expected
select AVG(AsText(Envelope(g))) FROM gis_multi_polygon;
AVG(AsText(Envelope(g)))
0
0 Expected
select AVG(IsSimple(g)) FROM gis_polygon;
AVG(IsSimple(g))
0.7895
0.7778 Expected
select AVG(IsSimple(g)) FROM gis_multi_polygon;
AVG(IsSimple(g))
0.7857
0.7857 Expected
select AVG(IsEmpty(g)) FROM gis_polygon;
AVG(IsEmpty(g))
0.0000
0.0000 Expected
select AVG(IsEmpty(g)) FROM gis_multi_polygon;
AVG(IsEmpty(g))
0.0000
0.0000 Expected
select AVG(Area(g)) FROM gis_polygon;
AVG(Area(g))
320.94736842105266
338.77777777777777 Expected
select AVG(Area(g)) FROM gis_multi_polygon;
AVG(Area(g))
481.92857142857144
481.92857142857144 Expected
select AVG(AsText(ExteriorRing(g))) FROM gis_polygon;
AVG(AsText(ExteriorRing(g)))
0
0 Expected
select AVG(AsText(InteriorRingN(g, 1))) FROM gis_polygon;
AVG(AsText(InteriorRingN(g, 1)))
0
0 Expected
select AVG(NumInteriorRings(g)) FROM gis_polygon;
AVG(NumInteriorRings(g))
0.2105
0 Expected
select AVG(AsText(Centroid(g))) FROM gis_polygon;
AVG(AsText(Centroid(g)))
0
0 Expected
select AVG(AsText(Centroid(g))) FROM gis_multi_polygon;
AVG(AsText(Centroid(g)))
0
0 Expected
#Checking the COUNT(DISTINCT) function
select COUNT(DISTINCT(GeometryType(g))) FROM gis_polygon;
COUNT(DISTINCT(GeometryType(g)))
1
1 Expected
select COUNT(DISTINCT(GeometryType(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(GeometryType(g)))
1
1 Expected
select COUNT(DISTINCT(SRID(g))) FROM gis_polygon;
COUNT(DISTINCT(SRID(g)))
1
1 Expected
select COUNT(DISTINCT(SRID(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(SRID(g)))
1
1 Expected
select COUNT(DISTINCT(Dimension(g))) FROM gis_polygon;
COUNT(DISTINCT(Dimension(g)))
1
1 Expected
select COUNT(DISTINCT(Dimension(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(Dimension(g)))
1
1 Expected
select COUNT(DISTINCT(AsText(Envelope(g)))) FROM gis_polygon;
COUNT(DISTINCT(AsText(Envelope(g))))
8
8 Expected
select COUNT(DISTINCT(AsText(Envelope(g)))) FROM gis_multi_polygon;
COUNT(DISTINCT(AsText(Envelope(g))))
3
3 Expected
select COUNT(DISTINCT(IsSimple(g))) FROM gis_polygon;
COUNT(DISTINCT(IsSimple(g)))
2
2 Expected
select COUNT(DISTINCT(IsSimple(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(IsSimple(g)))
2
2 Expected
select COUNT(DISTINCT(IsEmpty(g))) FROM gis_polygon;
COUNT(DISTINCT(IsEmpty(g)))
1
1 Expected
select COUNT(DISTINCT(IsEmpty(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(IsEmpty(g)))
1
1 Expected
select COUNT(DISTINCT(Area(g))) FROM gis_polygon;
COUNT(DISTINCT(Area(g)))
5
5 Expected
select COUNT(DISTINCT(Area(g))) FROM gis_multi_polygon;
COUNT(DISTINCT(Area(g)))
3
3 Expected
select COUNT(DISTINCT(AsText(ExteriorRing(g)))) FROM gis_polygon;
COUNT(DISTINCT(AsText(ExteriorRing(g))))
10
10 Expected
select COUNT(DISTINCT(AsText(InteriorRingN(g, 1)))) FROM gis_polygon;
COUNT(DISTINCT(AsText(InteriorRingN(g, 1))))
3
3 Expected
select COUNT(DISTINCT(NumInteriorRings(g))) FROM gis_polygon;
COUNT(DISTINCT(NumInteriorRings(g)))
2
2 Expected
select COUNT(DISTINCT(AsText(Centroid(g)))) FROM gis_polygon;
COUNT(DISTINCT(AsText(Centroid(g))))
7
7 Expected
select COUNT(DISTINCT(AsText(Centroid(g)))) FROM gis_multi_polygon;
COUNT(DISTINCT(AsText(Centroid(g))))
3
3 Expected
#Final Cleanup
DROP TABLE IF EXISTS gis_polygon, gis_multi_polygon;
