"WL6369 Explain for Connection"
"WL6369 Explain for Connection"
QUERY: SELECT DISTINCT   alias2.col_int AS field1 , alias2.col_int AS field2 FROM  a1 AS alias1 LEFT  JOIN aa1 AS alias2 ON  alias1.pk =  alias2.pk WHERE ( alias1.col_int = 8 OR alias1 .pk <= alias1.col_int ) GROUP BY field1, field2  ORDER BY field1, field2 DESC
STATUS: EQUAL
QUERY: SELECT DISTINCT   alias1.pk AS field1 FROM  f1 AS alias1 LEFT  JOIN a2 AS alias2 ON  alias1.col_varchar_1024_latin1_key =  alias2 .col_varchar_10_utf8_key WHERE alias1.pk  IN (5, 5) GROUP BY field1 HAVING field1 <= 3
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -35,4 +35,4 @@
               "filtered": 100,
-              "index_condition": "(`test`.`alias1`.`pk` in (5,5))",
-              "attached_condition": "(`field1` <= 3)"
+              "index_condition": true,
+              "using_where": true
             }
QUERY: SELECT alias1.pk AS field1 FROM  h2 AS alias1 LEFT  JOIN aa3 AS alias2 ON  alias1.pk =  alias2.col_int_key WHERE alias1.pk <> 9 GROUP BY field1 ORDER BY field1 LIMIT 1 OFFSET 3
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -23,4 +23,4 @@
               "filtered": 225,
-              "using_index": true,
-              "attached_condition": "(`test`.`alias1`.`pk` <> 9)"
+              "using_where": true,
+              "using_index": true
             }
QUERY: SELECT    alias1.pk AS field1 FROM  e1 AS alias1 RIGHT  JOIN cc2 AS alias2 ON  alias1.col_int =  alias2.col_int WHERE alias1.col_int_key  IN (8) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -30,4 +30,4 @@
           "filtered": 100,
-          "using_join_buffer": "Block Nested Loop",
-          "attached_condition": "(`test`.`alias2`.`col_int` = `test`.`alias1`.`col_int`)"
+          "using_where": true,
+          "using_join_buffer": "Block Nested Loop"
         }
QUERY: SELECT DISTINCT alias2.pk AS field1, alias2.pk AS field2, alias2.pk AS field3 FROM t1 AS alias1 RIGHT JOIN t2 AS alias2  ON  alias1.col_varchar_key =  alias2.col_varchar_key WHERE alias1.col_int >alias1.col_int HAVING field3 = 7 ORDER BY field1, field2, field3 LIMIT 10 OFFSET 1
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -20,3 +20,3 @@
               "filtered": 100,
-              "attached_condition": "((`test`.`alias1`.`col_int` > `test`.`alias1`.`col_int`) and (`test`.`alias1`.`col_varchar_key` is not null))"
+              "using_where": true
             }
QUERY: SELECT DISTINCT   alias2.col_time_key AS field1 , alias2.col_varchar_key AS field2 , alias2.col_varchar_key AS field3 , alias2.col_int_nokey AS field4 FROM ( c AS alias1 , ( view_a AS alias2 , c AS alias3 ) )   GROUP BY field1, field2, field3, field4 HAVING (field1 < 'w' OR field1 != 'ni') ORDER BY field3 
STATUS: EQUAL
QUERY: SELECT    alias1.col_int_key AS field1 , alias1.col_int_key AS field2 FROM ( ( SELECT   sq1_alias1.* FROM c AS sq1_alias1  ) AS alias1 RIGHT OUTER JOIN ( SELECT   sq2_alias1.* FROM ( bb AS sq2_alias1 STRAIGHT_JOIN c AS sq2_alias2 ON (sq2_alias2.pk = sq2_alias1.pk  ) )  ) AS alias2 ON (alias2.pk = alias1.col_int_key  ) ) WHERE  NOT EXISTS ( (SELECT   sq3_alias1.pk AS sq3_field1 FROM ( bb AS sq3_alias1 LEFT OUTER JOIN ( cc AS sq3_alias2 STRAIGHT_JOIN bb AS sq3_alias3 ON (sq3_alias3.pk = sq3_alias2.pk  ) ) ON (sq3_alias3.col_int_key = sq3_alias2.col_int_key  AND sq3_alias1.col_int_key > (SELECT   COUNT( DISTINCT c_sq1_alias1.col_int_nokey ) AS c_sq1_field1 FROM d AS c_sq1_alias1 WHERE c_sq1_alias1.col_int_nokey != c_sq1_alias1.pk ) ) )    ) )  GROUP BY field1, field2  ORDER BY alias1.col_date_key DESC , field1, field2 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -104,4 +104,4 @@
                 "filtered": 100,
+                "using_where": true,
                 "using_index": true,
-                "attached_condition": "<if>(is_not_null_compl(sq3_alias2..sq3_alias3), (`test`.`sq3_alias1`.`col_int_key` > (/* select#5 */ select count(distinct `test`.`c_sq1_alias1`.`col_int_nokey`) AS `c_sq1_field1` from `test`.`d` `c_sq1_alias1` where (`test`.`c_sq1_alias1`.`col_int_nokey` <> `test`.`c_sq1_alias1`.`pk`))), true)",
                 "attached_subqueries": [
@@ -117,3 +117,3 @@
                         "filtered": 100,
-                        "attached_condition": "(`test`.`c_sq1_alias1`.`col_int_nokey` <> `test`.`c_sq1_alias1`.`pk`)"
+                        "using_where": true
                       }
@@ -142,3 +142,3 @@
                 "filtered": 100,
-                "attached_condition": "<if>(is_not_null_compl(sq3_alias2..sq3_alias3), (`test`.`sq3_alias3`.`col_int_key` = `test`.`sq3_alias2`.`col_int_key`), true)"
+                "using_where": true
               }
QUERY: SELECT DISTINCT  SQL_SMALL_RESULT table2.col_date_key AS field1 FROM ( cc AS table1 INNER JOIN ( ( c AS table2 INNER JOIN bb AS table3 ON (table3.col_varchar_key = table2.col_varchar_key  ) ) ) ON (table3.col_varchar_key = table2.col_varchar_key  ) ) WHERE (   EXISTS ( (SELECT  SQL_SMALL_RESULT subquery1_t2.col_varchar_nokey AS subquery1_field1 FROM ( bb AS subquery1_t1 INNER JOIN cc AS subquery1_t2 ON (subquery1_t2.col_varchar_key = subquery1_t1.col_varchar_nokey  ) )   ) ) ) OR ( table1.col_varchar_key = 'q' AND table1.col_int_key = table2.col_int_key ) OR (  table2.col_varchar_key  IN (SELECT 'a' FROM dummy UNION SELECT 'p' FROM dummy ) OR table1.col_varchar_key IS  NULL ) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -23,4 +23,4 @@
             "filtered": 100,
-            "using_index": true,
-            "attached_condition": "(`test`.`table3`.`col_varchar_key` is not null)"
+            "using_where": true,
+            "using_index": true
           }
@@ -84,3 +84,3 @@
                       "filtered": 100,
-                      "attached_condition": "(<cache>(`test`.`table2`.`col_varchar_key`) = 'a')"
+                      "using_where": true
                     }
@@ -98,3 +98,3 @@
                       "filtered": 100,
-                      "attached_condition": "(<cache>(`test`.`table2`.`col_varchar_key`) = 'p')"
+                      "using_where": true
                     }
@@ -118,3 +118,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`subquery1_t1`.`col_varchar_nokey` is not null)"
+                  "using_where": true
                 }
QUERY: SELECT    table2.col_time_key AS field1 FROM ( ( SELECT   subquery1_t1.* FROM ( c AS subquery1_t1 STRAIGHT_JOIN c AS subquery1_t2 ON (subquery1_t2.col_int_key = subquery1_t1.col_int_key  ) ) WHERE subquery1_t1.pk <= 7 ) AS table1 LEFT OUTER JOIN ( ( ( SELECT   subquery2_t1.* FROM b AS subquery2_t1 WHERE subquery2_t1.col_varchar_nokey <= 'l' ) AS table2 LEFT OUTER JOIN c AS table3 ON (table3.col_varchar_key = table2.col_varchar_key  ) ) ) ON (table3.pk = table2.pk  ) ) WHERE (   EXISTS ( (SELECT   subquery3_t1.col_varchar_nokey AS subquery3_field1 FROM ( bb AS subquery3_t1 LEFT  JOIN c AS subquery3_t2 ON (subquery3_t2.col_varchar_key = subquery3_t1.col_varchar_key  ) )   ) ) ) OR table1.col_int_key = 62 AND ( table1.col_int_key = table1.pk AND table2.col_varchar_nokey = table1.col_varchar_nokey ) ORDER BY table1.col_varchar_key DESC /*+JavaDB:Postgres: NULLS LAST */ , CONCAT( table3.col_varchar_key, table1.col_varchar_nokey ) /*+JavaDB:Postgres: NULLS FIRST*/ , table1.col_date_key /*+JavaDB:Postgres: NULLS FIRST*/ , table3 .pk DESC /*+JavaDB:Postgres: NULLS LAST */
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -36,3 +36,3 @@
                       "filtered": 100,
-                      "attached_condition": "((`test`.`subquery1_t1`.`pk` <= 7) and (`test`.`subquery1_t1`.`col_int_key` is not null))"
+                      "using_where": true
                     }
@@ -81,3 +81,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`subquery2_t1`.`col_varchar_nokey` <= 'l')"
+                  "using_where": true
                 }
@@ -105,3 +105,3 @@
             "filtered": 100,
-            "attached_condition": "<if>(is_not_null_compl(table2..table3), (`test`.`table3`.`col_varchar_key` = `table2`.`col_varchar_key`), true)"
+            "using_where": true
           }
QUERY: SELECT    alias1.col_datetime_key AS field1 FROM ( view_cc AS alias1 , bb AS alias2 , cc AS alias3 ) WHERE  alias2.pk < ALL (SELECT   sq1_alias2.pk AS sq1_field1 FROM ( c AS sq1_alias1 , cc AS sq1_alias2 ) WHERE  sq1_alias1.col_varchar_nokey != (SELECT   COUNT(  c_sq1_alias1.col_varchar_key ) AS c_sq1_field1 FROM ( cc AS c_sq1_alias1 RIGHT OUTER JOIN ( ( cc AS c_sq1_alias2 INNER JOIN b AS c_sq1_alias3 ON (c_sq1_alias3.col_varchar_nokey = c_sq1_alias2.col_varchar_key ) ) ) ON (c_sq1_alias3.pk = c_sq1_alias2.pk ) ) WHERE c_sq1_alias1.col_varchar_key < 'm' )   )  GROUP BY field1 HAVING ((field1 <= 'USA' OR field1 < 2) AND field1 <> 'd') ORDER BY alias1.col_time_key DESC , field1 LIMIT 10 OFFSET 208
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -21,4 +21,4 @@
               "filtered": 100,
+              "using_where": true,
               "using_index": true,
-              "attached_condition": "<not>((`test`.`alias2`.`pk` >= (/* select#2 */ select min(`test`.`sq1_alias2`.`pk`) from `test`.`c` `sq1_alias1` join `test`.`cc` `sq1_alias2` where (`test`.`sq1_alias1`.`col_varchar_nokey` <> (/* select#3 */ select count(`test`.`c_sq1_alias1`.`col_varchar_key`) AS `c_sq1_field1` from `test`.`cc` `c_sq1_alias2` join `test`.`b` `c_sq1_alias3` join `test`.`cc` `c_sq1_alias1` where ((`test`.`c_sq1_alias2`.`col_varchar_key` = `test`.`c_sq1_alias3`.`col_varchar_nokey`) and (`test`.`c_sq1_alias2`.`pk` = `test`.`c_sq1_alias3`.`pk`) and (`test`.`c_sq1_alias1`.`col_varchar_key` < 'm')))))))",
               "attached_subqueries": [
@@ -36,3 +36,3 @@
                           "filtered": 100,
-                          "attached_condition": "(`test`.`sq1_alias1`.`col_varchar_nokey` <> (/* select#3 */ select count(`test`.`c_sq1_alias1`.`col_varchar_key`) AS `c_sq1_field1` from `test`.`cc` `c_sq1_alias2` join `test`.`b` `c_sq1_alias3` join `test`.`cc` `c_sq1_alias1` where ((`test`.`c_sq1_alias2`.`col_varchar_key` = `test`.`c_sq1_alias3`.`col_varchar_nokey`) and (`test`.`c_sq1_alias2`.`pk` = `test`.`c_sq1_alias3`.`pk`) and (`test`.`c_sq1_alias1`.`col_varchar_key` < 'm'))))",
+                          "using_where": true,
                           "attached_subqueries": [
@@ -73,3 +73,3 @@
                                       "filtered": 100,
-                                      "attached_condition": "(`test`.`c_sq1_alias2`.`col_varchar_key` = `test`.`c_sq1_alias3`.`col_varchar_nokey`)"
+                                      "using_where": true
                                     }
@@ -90,5 +90,5 @@
                                       "filtered": 100,
+                                      "using_where": true,
                                       "using_index": true,
-                                      "using_join_buffer": "Block Nested Loop",
-                                      "attached_condition": "(`test`.`c_sq1_alias1`.`col_varchar_key` < 'm')"
+                                      "using_join_buffer": "Block Nested Loop"
                                     }
QUERY: SELECT DISTINCT   SUM( DISTINCT alias1.col_int_nokey ) AS field1 , MAX( DISTINCT alias2.col_varchar_key ) AS field2 FROM ( c AS alias1 , c AS alias2 , cc AS alias3 ) WHERE  alias2.col_int_key > (SELECT   COUNT(  sq1_alias1.col_int_key ) AS sq1_field1 FROM ( cc AS sq1_alias1 INNER JOIN view_c AS sq1_alias2 ON (sq1_alias2.col_varchar_key = sq1_alias1.col_varchar_nokey  ) ) WHERE sq1_alias2.col_varchar_nokey < sq1_alias1.col_varchar_key )  HAVING (field1 > 'zc' AND field2 >= 'q') ORDER BY alias1.col_time_key ASC , field1, field2 LIMIT 2 /*  */
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -24,4 +24,4 @@
               "filtered": 90,
+              "using_where": true,
               "using_index": true,
-              "attached_condition": "(`test`.`alias2`.`col_int_key` > (/* select#2 */ select count(`test`.`sq1_alias1`.`col_int_key`) AS `sq1_field1` from `test`.`cc` `sq1_alias1` join `test`.`c` where ((`test`.`c`.`col_varchar_key` = `test`.`sq1_alias1`.`col_varchar_nokey`) and (`test`.`c`.`col_varchar_nokey` < `test`.`sq1_alias1`.`col_varchar_key`))))",
               "attached_subqueries": [
@@ -42,3 +42,3 @@
                           "filtered": 100,
-                          "attached_condition": "(`test`.`sq1_alias1`.`col_varchar_nokey` is not null)"
+                          "using_where": true
                         }
@@ -62,3 +62,3 @@
                           "filtered": 100,
-                          "attached_condition": "(`test`.`c`.`col_varchar_nokey` < `test`.`sq1_alias1`.`col_varchar_key`)"
+                          "using_where": true
                         }
QUERY: SELECT    alias2.col_datetime_key AS field1 , alias1.col_varchar_key AS field2 , alias1.col_varchar_nokey AS field3 , alias2.col_varchar_key AS field4 , alias2.pk AS field5 , alias2.col_date_key AS field6 , alias1.col_date_key AS field7 , alias1.col_int_key AS field8 FROM ( cc AS alias1 LEFT  JOIN ( ( ( SELECT   sq1_alias1.* FROM c AS sq1_alias1  ) AS alias2 INNER JOIN ( SELECT   sq2_alias1.* FROM ( b AS sq2_alias1 , view_aa AS sq2_alias2 )  ) AS alias3 ON (alias3.col_varchar_nokey = alias2.col_varchar_key  ) ) ) ON (alias3.col_int_key = alias2.col_int_key  ) ) WHERE (   EXISTS ( (SELECT   sq3_alias1.col_varchar_nokey AS sq3_field1 FROM ( c AS sq3_alias1 , bb AS sq3_alias2 )   ) ) ) OR ( alias1.col_int_key NOT IN (55, 229) OR alias1.col_int_key > 28 AND alias1.col_int_key < ( 28 + 73 ) ) AND alias1.col_int_key != alias2.pk  HAVING field8 = 'v' ORDER BY field3 , field1, field2, field3, field4, field5, field6, field7, field8 
STATUS: EQUAL
QUERY: SELECT    alias1.col_datetime_key AS field1 , alias2.col_date_key AS field2 FROM ( c AS alias1 LEFT OUTER JOIN ( ( ( SELECT DISTINCT  sq1_alias1.* FROM bb AS sq1_alias1  ) AS alias2 INNER JOIN c AS alias3 ON (alias3.col_int_key = alias2.col_int_key  ) ) ) ON (alias3.pk = alias2.col_int_key  ) ) WHERE (   EXISTS ( (SELECT 9 FROM DUAL ) ) ) OR alias1.col_varchar_key LIKE CONCAT( 'b' , '%')  GROUP BY field1, field2 HAVING field2 != 6 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -59,3 +59,3 @@
             "filtered": 100,
-            "attached_condition": "<if>(is_not_null_compl(alias2..alias3), (`test`.`alias3`.`col_int_key` = `alias2`.`col_int_key`), true)"
+            "using_where": true
           }
QUERY: SELECT  STRAIGHT_JOIN  table1.pk AS field1 , table2.col_int_key AS field2 , table1.col_int_nokey AS field3 , table2.col_varchar_key AS field4 FROM ( ( SELECT   subquery1_t1.* FROM cc AS subquery1_t1 WHERE ( subquery1_t1.col_int_nokey = subquery1_t1.col_int_nokey AND   EXISTS ( (SELECT   child_subquery1_t2.pk AS child_subquery1_field1 FROM ( c AS child_subquery1_t1 RIGHT  JOIN c AS child_subquery1_t2 ON (child_subquery1_t2.col_int_key = child_subquery1_t1.col_int_key ) ) WHERE child_subquery1_t2.col_int_key != 7   ) ) ) ) AS table1 INNER JOIN cc AS table2 ON (table2.col_varchar_nokey = table1.col_varchar_key  ) ) WHERE (  table1.col_varchar_nokey >= ALL (SELECT  SQL_SMALL_RESULT subquery2_t1.col_varchar_key AS subquery2_field1 FROM ( c AS subquery2_t1 INNER JOIN cc AS subquery2_t2 ON (subquery2_t2.pk = subquery2_t1.col_int_nokey  ) )   ) ) OR table1.pk = 98 AND table2.col_varchar_key != 'q' ORDER BY CONCAT( table1.col_varchar_nokey, table1.col_varchar_nokey ) /*+JavaDB:Postgres: NULLS FIRST*/
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -14,3 +14,3 @@
             "filtered": 100,
-            "attached_condition": "(<not>((`table1`.`col_varchar_nokey` < <max>(/* select#4 */ select sql_small_result `test`.`subquery2_t1`.`col_varchar_key` AS `subquery2_field1` from `test`.`c` `subquery2_t1` join `test`.`cc` `subquery2_t2` where (`test`.`subquery2_t2`.`pk` = `test`.`subquery2_t1`.`col_int_nokey`)))) or (`table1`.`pk` = 98))",
+            "using_where": true,
             "attached_subqueries": [
@@ -28,3 +28,3 @@
                         "filtered": 100,
-                        "attached_condition": "(`test`.`subquery2_t1`.`col_int_nokey` is not null)"
+                        "using_where": true
                       }
@@ -66,3 +66,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`subquery1_t1`.`col_int_nokey` = `test`.`subquery1_t1`.`col_int_nokey`)"
+                  "using_where": true
                 },
@@ -89,4 +89,4 @@
                             "filtered": 100,
-                            "using_index": true,
-                            "attached_condition": "(`test`.`child_subquery1_t2`.`col_int_key` <> 7)"
+                            "using_where": true,
+                            "using_index": true
                           }
@@ -130,4 +130,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "((`test`.`table2`.`col_varchar_nokey` = `table1`.`col_varchar_key`) and (<not>((`table1`.`col_varchar_nokey` < <max>(/* select#4 */ select sql_small_result `test`.`subquery2_t1`.`col_varchar_key` AS `subquery2_field1` from `test`.`c` `subquery2_t1` join `test`.`cc` `subquery2_t2` where (`test`.`subquery2_t2`.`pk` = `test`.`subquery2_t1`.`col_int_nokey`)))) or ((`table1`.`pk` = 98) and (`test`.`table2`.`col_varchar_key` <> 'q'))))",
             "attached_subqueries": [
@@ -145,3 +145,3 @@
                         "filtered": 100,
-                        "attached_condition": "(`test`.`subquery2_t1`.`col_int_nokey` is not null)"
+                        "using_where": true
                       }
QUERY: SELECT    alias1.col_int_key AS field1 , alias2.col_datetime_key AS field2 , alias1.col_varchar_nokey AS field3 , alias1.col_int_nokey AS field4 , alias1.col_int_key AS field5 FROM ( b AS alias1 , view_d AS alias2 ) WHERE  alias1.col_varchar_nokey >= ANY (SELECT  SQL_SMALL_RESULT sq1_alias1.col_varchar_key AS sq1_field1 FROM ( c AS sq1_alias1 INNER JOIN c AS sq1_alias2 ON (sq1_alias2.col_int_key = sq1_alias1.pk  ) )   )  GROUP BY field1, field2, field3, field4, field5  ORDER BY alias1.col_date_key ASC , field1, field2, field3, field4, field5 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -16,3 +16,3 @@
               "filtered": 100,
-              "attached_condition": "<nop>((`test`.`alias1`.`col_varchar_nokey` >= (/* select#2 */ select sql_small_result min(`test`.`sq1_alias1`.`col_varchar_key`) from `test`.`c` `sq1_alias1` join `test`.`c` `sq1_alias2` where (`test`.`sq1_alias2`.`col_int_key` = `test`.`sq1_alias1`.`pk`))))",
+              "using_where": true,
               "attached_subqueries": [
QUERY: SELECT    CONCAT ( alias1.col_varchar_key , alias1.col_varchar_nokey ) AS field1 FROM ( cc AS alias1 , c AS alias2 , cc AS alias3 ) WHERE (   EXISTS ( (SELECT   sq1_alias1.col_varchar_nokey AS sq1_field1 FROM ( c AS sq1_alias1 , cc AS sq1_alias2 )   ) ) ) AND alias1.col_varchar_key <= 'p' AND alias3.col_varchar_key > alias2.col_varchar_nokey  GROUP BY field1   /*  */
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -17,3 +17,3 @@
             "filtered": 55,
-            "attached_condition": "(`test`.`alias1`.`col_varchar_key` <= 'p')"
+            "using_where": true
           }
@@ -32,3 +32,3 @@
             "table_name": "alias3",
-            "access_type": "ALL",
+            "access_type": "range",
             "possible_keys": [
@@ -36,5 +36,11 @@
             ],
-            "rows": 20,
-            "filtered": 100,
-            "range_checked_for_each_record": "index map: 0x20"
+            "key": "col_varchar_key",
+            "used_key_parts": [
+              "col_varchar_key"
+            ],
+            "key_length": "4",
+            "rows": 5,
+            "filtered": 400,
+            "range_checked_for_each_record": "index map: 0x20",
+            "using_index": true
           }
QUERY: SELECT    alias1.col_int_key AS field1 , alias1.col_date_key AS field2 , alias1.col_varchar_key AS field3 FROM ( c AS alias1 , d AS alias2 , cc AS alias3 ) WHERE (   EXISTS ( (SELECT   sq1_alias1.col_varchar_key AS sq1_field1 FROM ( d AS sq1_alias1 LEFT  JOIN d AS sq1_alias2 ON (sq1_alias2.col_varchar_key = sq1_alias1.col_varchar_key  ) )   ) ) ) AND alias1.col_int_key = alias1.col_int_key AND alias1.col_int_key < alias3.col_int_key  GROUP BY field1, field2, field3 HAVING field2 >= 'a' 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -17,3 +17,3 @@
             "filtered": 100,
-            "attached_condition": "(`test`.`alias1`.`col_int_key` = `test`.`alias1`.`col_int_key`)"
+            "using_where": true
           }
@@ -23,3 +23,3 @@
             "table_name": "alias3",
-            "access_type": "ALL",
+            "access_type": "range",
             "possible_keys": [
@@ -27,5 +27,11 @@
             ],
-            "rows": 20,
-            "filtered": 100,
-            "range_checked_for_each_record": "index map: 0x2"
+            "key": "col_int_key",
+            "used_key_parts": [
+              "col_int_key"
+            ],
+            "key_length": "5",
+            "rows": 8,
+            "filtered": 250,
+            "range_checked_for_each_record": "index map: 0x2",
+            "using_index": true
           }
QUERY: SELECT    alias1.col_datetime_key AS field1 , alias2.col_int_key AS field2 FROM ( c AS alias1 , d AS alias2 , cc AS alias3 ) WHERE (   EXISTS ( (SELECT   sq1_alias1.col_int_key AS sq1_field1 FROM bb AS sq1_alias1 WHERE sq1_alias1.pk < 8   ) ) ) OR alias1.col_int_key > alias3.col_int_key   ORDER BY alias1.col_int_key ASC , field1, field2 LIMIT 2 /*  */
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -22,3 +22,3 @@
             "table_name": "alias3",
-            "access_type": "ALL",
+            "access_type": "range",
             "possible_keys": [
@@ -26,5 +26,11 @@
             ],
-            "rows": 20,
-            "filtered": 100,
-            "range_checked_for_each_record": "index map: 0x2"
+            "key": "col_int_key",
+            "used_key_parts": [
+              "col_int_key"
+            ],
+            "key_length": "5",
+            "rows": 7,
+            "filtered": 285.71,
+            "range_checked_for_each_record": "index map: 0x2",
+            "using_index": true
           }
@@ -66,4 +72,4 @@
               "filtered": 100,
-              "using_index": true,
-              "attached_condition": "(`test`.`sq1_alias1`.`pk` < 8)"
+              "using_where": true,
+              "using_index": true
             }
QUERY: SELECT    alias1.col_int_key AS field1 , alias1.col_int_key AS field2 FROM ( ( SELECT   sq1_alias1.* FROM d AS sq1_alias1  ) AS alias1 , d AS alias2 ) WHERE (  (SELECT   MIN(  sq2_alias1.pk ) AS sq2_field1 FROM ( view_c AS sq2_alias1 RIGHT  JOIN c AS sq2_alias2 ON (sq2_alias2.col_varchar_nokey = sq2_alias1.col_varchar_key  ) )  ) IS NOT NULL ) AND ( alias2.col_varchar_key <= 'z' OR   EXISTS ( (SELECT   sq3_alias1.col_int_nokey AS sq3_field1 FROM a AS sq3_alias1    ) ) )  GROUP BY field1, field2 HAVING field2 < 4 ORDER BY alias1.col_int_key ASC , field1, field2 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -24,4 +24,4 @@
               "filtered": 100,
-              "using_index": true,
-              "attached_condition": "(`test`.`alias2`.`col_varchar_key` <= 'z')"
+              "using_where": true,
+              "using_index": true
             }
QUERY: SELECT  STRAIGHT_JOIN  alias1.col_int_key AS field1 FROM ( b AS alias1 , ( SELECT   sq1_alias1.* FROM ( cc AS sq1_alias1 INNER JOIN ( c AS sq1_alias2 INNER JOIN c AS sq1_alias3 ON (sq1_alias3.pk = sq1_alias2.pk  ) ) ON (sq1_alias3.col_varchar_key = sq1_alias2.col_varchar_key  ) ) WHERE  sq1_alias2.col_int_key >= ANY (SELECT   c_sq1_alias1.col_int_key AS c_sq1_field1 FROM c AS c_sq1_alias1  GROUP BY c_sq1_field1  ) ) AS alias2 ) WHERE   EXISTS ( (SELECT   sq2_alias1.col_varchar_key AS sq2_field1 FROM c AS sq2_alias1 WHERE sq2_alias1.col_varchar_nokey < 'p' GROUP BY sq2_field1 ) )  GROUP BY field1 HAVING field1 <> 'o' ORDER BY field1  , alias1.col_time_key , alias2 .pk DESC, field1 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -60,5 +60,5 @@
                         "filtered": 100,
+                        "using_where": true,
                         "using_index": true,
                         "using_join_buffer": "Block Nested Loop",
-                        "attached_condition": "<nop>((`test`.`sq1_alias2`.`col_int_key` >= (/* select#3 */ select min(`test`.`c_sq1_alias1`.`col_int_key`) from `test`.`c` `c_sq1_alias1`)))",
                         "attached_subqueries": [
@@ -93,3 +93,3 @@
                         "filtered": 100,
-                        "attached_condition": "(`test`.`sq1_alias3`.`col_varchar_key` = `test`.`sq1_alias2`.`col_varchar_key`)"
+                        "using_where": true
                       }
@@ -115,3 +115,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`sq2_alias1`.`col_varchar_nokey` < 'p')"
+                  "using_where": true
                 }
QUERY: SELECT    CONCAT( table1.col_varchar_nokey , table1.col_varchar_nokey ) AS field1 FROM ( ( SELECT   subquery1_t1.* FROM bb AS subquery1_t1 WHERE ( subquery1_t1.col_varchar_key != 'y' OR subquery1_t1.col_varchar_key <= 'd' ) ) AS table1 RIGHT OUTER JOIN ( ( c AS table2 STRAIGHT_JOIN bb AS table3 ON (table3.pk = table2.pk  OR table2.col_varchar_key  IN (SELECT   subquery2_t2.col_varchar_key AS subquery2_field1 FROM ( c AS subquery2_t1 RIGHT OUTER JOIN c AS subquery2_t2 ON (subquery2_t2.col_int_nokey = subquery2_t1.col_int_key  ) ) WHERE  subquery2_t1.col_int_key >= (SELECT   SUM(  child_subquery1_t1.col_int_key ) AS child_subquery1_field1 FROM cc AS child_subquery1_t1 WHERE ( child_subquery1_t1.pk > child_subquery1_t1.pk OR child_subquery1_t1.col_int_nokey > 6 ) )  ) ) ) ) ON (table3.col_varchar_nokey = table2.col_varchar_key  ) ) WHERE (   EXISTS ( (SELECT   subquery3_t1.pk AS subquery3_field1 FROM ( bb AS subquery3_t1 INNER JOIN ( cc AS subquery3_t2 INNER JOIN c AS subquery3_t3 ON (subquery3_t3.col_varchar_key = subquery3_t2.col_varchar_key  ) ) ON (subquery3_t3.pk = subquery3_t2.col_int_nokey  ) )    ) ) ) AND ( table1.col_varchar_key < 'b' OR table1.col_int_key  BETWEEN 253 AND ( 253 + 77 ) ) OR ( table2.col_varchar_nokey != 't' OR table2.col_varchar_nokey = table1.col_varchar_nokey ) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -25,4 +25,4 @@
           "filtered": 100,
+          "using_where": true,
           "using_join_buffer": "Block Nested Loop",
-          "attached_condition": "((`test`.`table3`.`pk` = `test`.`table2`.`pk`) or <in_optimizer>(`test`.`table2`.`col_varchar_key`,`test`.`table2`.`col_varchar_key` in ( <materialize> (/* select#3 */ select `test`.`subquery2_t2`.`col_varchar_key` AS `subquery2_field1` from `test`.`c` `subquery2_t2` join `test`.`c` `subquery2_t1` where ((`test`.`subquery2_t2`.`col_int_nokey` = `test`.`subquery2_t1`.`col_int_key`) and (`test`.`subquery2_t1`.`col_int_key` >= (/* select#4 */ select sum(`test`.`child_subquery1_t1`.`col_int_key`) AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` where (`test`.`child_subquery1_t1`.`col_int_nokey` > 6)))) ), <primary_index_lookup>(`test`.`table2`.`col_varchar_key` in <temporary table> on <auto_key> where ((`test`.`table2`.`col_varchar_key` = `materialized-subquery`.`subquery2_field1`))))))",
           "attached_subqueries": [
@@ -56,4 +56,4 @@
                           "filtered": 100,
+                          "using_where": true,
                           "using_index": true,
-                          "attached_condition": "(`test`.`subquery2_t1`.`col_int_key` >= (/* select#4 */ select sum(`test`.`child_subquery1_t1`.`col_int_key`) AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` where (`test`.`child_subquery1_t1`.`col_int_nokey` > 6)))",
                           "attached_subqueries": [
@@ -69,3 +69,3 @@
                                   "filtered": 100,
-                                  "attached_condition": "(`test`.`child_subquery1_t1`.`col_int_nokey` > 6)"
+                                  "using_where": true
                                 }
@@ -85,4 +85,4 @@
                           "filtered": 100,
-                          "using_join_buffer": "Block Nested Loop",
-                          "attached_condition": "(`test`.`subquery2_t2`.`col_int_nokey` = `test`.`subquery2_t1`.`col_int_key`)"
+                          "using_where": true,
+                          "using_join_buffer": "Block Nested Loop"
                         }
@@ -103,4 +103,4 @@
           "filtered": 100,
+          "using_where": true,
           "using_join_buffer": "Block Nested Loop",
-          "attached_condition": "(<if>(found_match(table1), ((`test`.`table2`.`col_varchar_nokey` <> 't') or (`table1`.`col_varchar_nokey` = `test`.`table2`.`col_varchar_nokey`)), true) and <if>(is_not_null_compl(table1), (`test`.`table3`.`col_varchar_nokey` = `test`.`table2`.`col_varchar_key`), true))",
           "materialized_from_subquery": {
@@ -119,3 +119,3 @@
                 "filtered": 100,
-                "attached_condition": "((`test`.`subquery1_t1`.`col_varchar_key` <> 'y') or (`test`.`subquery1_t1`.`col_varchar_key` <= 'd'))"
+                "using_where": true
               }
@@ -156,4 +156,4 @@
                 "filtered": 100,
-                "using_join_buffer": "Block Nested Loop",
-                "attached_condition": "(`test`.`subquery3_t2`.`col_int_nokey` is not null)"
+                "using_where": true,
+                "using_join_buffer": "Block Nested Loop"
               }
@@ -178,3 +178,3 @@
                 "filtered": 100,
-                "attached_condition": "(`test`.`subquery3_t3`.`col_varchar_key` = `test`.`subquery3_t2`.`col_varchar_key`)"
+                "using_where": true
               }
QUERY: SELECT DISTINCT col_int_nokey AS field1 , col_int_nokey AS field2 FROM a AS alias1 WHERE ( ( alias1.pk > 54 AND alias1.pk < ( 54 + 151 ) OR ( alias1.col_int_key  IN (240) OR ( alias1.pk > 54 AND alias1.pk < ( 54 + 16 ) OR ( alias1.col_int_key  BETWEEN 54 AND ( 54 + 125 ) OR alias1.pk > 54 AND alias1.pk < ( 54 + 147 ) ) ) ) ) OR alias1 .pk >= alias1.pk )  GROUP BY field1, field2
STATUS: EQUAL
QUERY: SELECT    MAX(  alias2.pk ) AS field1 , SUM( DISTINCT alias1.col_varchar_key ) AS field2 ,  (SELECT   MAX( DISTINCT sq1_alias1.col_varchar_nokey ) AS sq1_field1 FROM a AS sq1_alias1  ) AS field3 FROM ( c AS alias1 , ( SELECT   sq2_alias2.* FROM ( d AS sq2_alias1 LEFT OUTER JOIN c AS sq2_alias2 ON (sq2_alias2.col_int_key = sq2_alias1.col_int_nokey  ) ) WHERE ( sq2_alias1.col_varchar_nokey = 'o' OR sq2_alias1.col_varchar_key <= 'd' ) ) AS alias2 , cc AS alias3 ) WHERE   EXISTS ( (SELECT DISTINCT  sq3_alias1.col_varchar_nokey AS sq3_field1 FROM ( b AS sq3_alias1 RIGHT  JOIN bb AS sq3_alias2 ON (sq3_alias2.col_varchar_nokey = sq3_alias1.col_varchar_key  ) )   ) )  GROUP BY field3  ORDER BY alias1.col_datetime_key , alias2 .pk  , alias1.col_date_key , alias1 .pk ASC
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -55,3 +55,3 @@
                         "filtered": 100,
-                        "attached_condition": "((`test`.`sq2_alias1`.`col_varchar_nokey` = 'o') or (`test`.`sq2_alias1`.`col_varchar_key` <= 'd'))"
+                        "using_where": true
                       }
QUERY: SELECT  col_int_nokey AS field1 FROM a AS table1 WHERE table1 .pk = table1.pk
STATUS: EQUAL
QUERY: SELECT    alias1.col_time_key AS field1 , alias1.col_datetime_key AS field2 , alias1.col_int_key AS field3 FROM ( bb AS alias1 , ( SELECT   sq1_alias1.* FROM ( cc AS sq1_alias1 INNER JOIN cc AS sq1_alias2 ON (sq1_alias2.col_varchar_key = sq1_alias1.col_varchar_nokey  ) )  ) AS alias2 , ( SELECT   sq2_alias1.* FROM b AS sq2_alias1  ) AS alias3 ) WHERE  alias1.col_varchar_nokey <= ANY (SELECT   sq3_alias1.col_varchar_nokey AS sq3_field1 FROM ( c AS sq3_alias1 INNER JOIN ( c AS sq3_alias2 INNER JOIN c AS sq3_alias3 ON (sq3_alias3.pk = sq3_alias2.col_int_key  ) ) ON (sq3_alias3.col_varchar_nokey = sq3_alias2.col_varchar_key  ) )   )   
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -11,3 +11,3 @@
           "filtered": 100,
-          "attached_condition": "<nop>((`test`.`alias1`.`col_varchar_nokey` <= (/* select#4 */ select max(`test`.`sq3_alias1`.`col_varchar_nokey`) from `test`.`c` `sq3_alias1` join `test`.`c` `sq3_alias2` join `test`.`c` `sq3_alias3` where ((`test`.`sq3_alias3`.`pk` = `test`.`sq3_alias2`.`col_int_key`) and (`test`.`sq3_alias3`.`col_varchar_nokey` = `test`.`sq3_alias2`.`col_varchar_key`)))))",
+          "using_where": true,
           "attached_subqueries": [
@@ -43,5 +43,5 @@
                       "filtered": 100,
+                      "using_where": true,
                       "using_index": true,
-                      "using_join_buffer": "Block Nested Loop",
-                      "attached_condition": "(`test`.`sq3_alias2`.`col_int_key` is not null)"
+                      "using_join_buffer": "Block Nested Loop"
                     }
@@ -65,3 +65,3 @@
                       "filtered": 100,
-                      "attached_condition": "(`test`.`sq3_alias3`.`col_varchar_nokey` = `test`.`sq3_alias2`.`col_varchar_key`)"
+                      "using_where": true
                     }
@@ -117,3 +117,3 @@
                     "filtered": 100,
-                    "attached_condition": "(`test`.`sq1_alias1`.`col_varchar_nokey` is not null)"
+                    "using_where": true
                   }
QUERY: SELECT    alias1.col_varchar_nokey AS field1 , alias1.col_varchar_key AS field2 , alias1.col_varchar_key AS field3 FROM ( b AS alias1 , c AS alias2 , b AS alias3 ) WHERE (  alias1.col_varchar_nokey >= ALL (SELECT DISTINCT  sq1_alias1.col_varchar_key AS sq1_field1 FROM ( view_a AS sq1_alias1 LEFT OUTER JOIN c AS sq1_alias2 ON (sq1_alias2.col_varchar_key = sq1_alias1.col_varchar_nokey  ) )   ) ) AND alias1.col_int_key NOT BETWEEN 20 AND ( 20 + 10 ) AND (   EXISTS (SELECT DISTINCT  sq2_alias1.col_int_key AS sq2_field1 FROM ( cc AS sq2_alias1 INNER JOIN b AS sq2_alias2 ON (sq2_alias2.col_int_nokey = sq2_alias1.col_int_key  ) ) WHERE sq2_alias1.col_varchar_nokey != alias3.col_varchar_nokey AND sq2_alias1.col_varchar_nokey <= 'g' ) AND alias1.col_varchar_nokey != 'z' )  HAVING field1 <= 3 ORDER BY CONCAT( alias1.col_varchar_key, alias2.col_varchar_key ), field1, field2, field3 LIMIT 1
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -17,3 +17,3 @@
             "filtered": 100,
-            "attached_condition": "(<not>((`test`.`alias1`.`col_varchar_nokey` < <max>(/* select#2 */ select `test`.`a`.`col_varchar_key` AS `sq1_field1` from `test`.`a` left join `test`.`c` `sq1_alias2` on((`test`.`sq1_alias2`.`col_varchar_key` = `test`.`a`.`col_varchar_nokey`)) where 1))) and (`test`.`alias1`.`col_int_key` not between 20 and <cache>((20 + 10))) and (`test`.`alias1`.`col_varchar_nokey` <> 'z'))",
+            "using_where": true,
             "attached_subqueries": [
@@ -52,5 +52,5 @@
                           "filtered": 100,
+                          "using_where": true,
                           "using_index": true,
-                          "distinct": true,
-                          "attached_condition": "<if>(is_not_null_compl(sq1_alias2), (`test`.`sq1_alias2`.`col_varchar_key` = `test`.`a`.`col_varchar_nokey`), true)"
+                          "distinct": true
                         }
@@ -70,4 +70,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "exists(/* select#3 */ select `test`.`sq2_alias1`.`col_int_key` AS `sq2_field1` from `test`.`cc` `sq2_alias1` join `test`.`b` `sq2_alias2` where ((`test`.`sq2_alias1`.`col_int_key` = `test`.`sq2_alias2`.`col_int_nokey`) and (`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias3`.`col_varchar_nokey`) and (`test`.`sq2_alias1`.`col_varchar_nokey` <= 'g')))",
             "attached_subqueries": [
@@ -87,3 +87,3 @@
                           "filtered": 100,
-                          "attached_condition": "(`test`.`sq2_alias2`.`col_int_nokey` is not null)"
+                          "using_where": true
                         }
@@ -107,3 +107,3 @@
                           "filtered": 100,
-                          "attached_condition": "((`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias3`.`col_varchar_nokey`) and (`test`.`sq2_alias1`.`col_varchar_nokey` <= 'g'))"
+                          "using_where": true
                         }
QUERY: SELECT   SQL_SMALL_RESULT  (SELECT   COUNT(  sq1_alias1.col_varchar_nokey ) AS sq1_field1 FROM ( cc AS sq1_alias1 , c AS sq1_alias2 )  ) AS field1 FROM ( c AS alias1 LEFT  JOIN ( ( ( SELECT   sq2_alias1.* FROM bb AS sq2_alias1  ) AS alias2 INNER JOIN ( SELECT   sq3_alias2.* FROM ( bb AS sq3_alias1 , a AS sq3_alias2 ) WHERE sq3_alias1.col_varchar_nokey != sq3_alias2.col_varchar_key ) AS alias3 ON (alias3.pk = alias2.pk  ) ) ) ON (alias3.col_varchar_key = alias2.col_varchar_key  ) ) WHERE  alias3.col_varchar_key > ALL (SELECT   sq4_alias2.col_varchar_nokey AS sq4_field1 FROM ( d AS sq4_alias1 STRAIGHT_JOIN cc AS sq4_alias2 ON (sq4_alias2.pk = sq4_alias1.col_int_key  ) )   )  GROUP BY field1 HAVING field1 = 'u' ORDER BY alias1.col_varchar_key , alias3 .pk DESC , alias1.col_varchar_key , alias1 .pk 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -53,4 +53,4 @@
               "filtered": 100,
+              "using_where": true,
               "using_join_buffer": "Block Nested Loop",
-              "attached_condition": "(<if>(found_match(alias2..alias3), <not>((`alias3`.`col_varchar_key` <= <max>(/* select#5 */ select `test`.`sq4_alias2`.`col_varchar_nokey` AS `sq4_field1` from `test`.`d` `sq4_alias1` straight_join `test`.`cc` `sq4_alias2` where (`test`.`sq4_alias2`.`pk` = `test`.`sq4_alias1`.`col_int_key`)))), true) and <if>(is_not_null_compl(alias2..alias3), ((`alias3`.`pk` = `alias2`.`pk`) and (`alias3`.`col_varchar_key` = `alias2`.`col_varchar_key`)), true))",
               "attached_subqueries": [
@@ -76,4 +76,4 @@
                           "filtered": 100,
-                          "using_index": true,
-                          "attached_condition": "(`test`.`sq4_alias1`.`col_int_key` is not null)"
+                          "using_where": true,
+                          "using_index": true
                         }
@@ -124,4 +124,4 @@
                         "filtered": 100,
-                        "using_join_buffer": "Block Nested Loop",
-                        "attached_condition": "(`test`.`sq3_alias1`.`col_varchar_nokey` <> `test`.`sq3_alias2`.`col_varchar_key`)"
+                        "using_where": true,
+                        "using_join_buffer": "Block Nested Loop"
                       }
QUERY: SELECT    CONCAT( table1.col_varchar_nokey , table1.col_varchar_key ) AS field1 , table1.col_varchar_key AS field2 , CONCAT( table1.col_varchar_nokey , table1.col_varchar_key ) AS field3 FROM ( cc AS table1 STRAIGHT_JOIN ( ( ( SELECT   subquery1_t2.* FROM ( c AS subquery1_t1 LEFT  JOIN ( c AS subquery1_t2 LEFT OUTER JOIN cc AS subquery1_t3 ON (subquery1_t3.col_int_key = subquery1_t2.pk  ) ) ON (subquery1_t3.col_int_key = subquery1_t2.col_int_key  ) )  ) AS table2 LEFT OUTER JOIN bb AS table3 ON (table3.col_varchar_key = table2.col_varchar_nokey  ) ) ) ON (table3.col_varchar_nokey = table2.col_varchar_key  ) ) WHERE (  table3.col_varchar_key <= (SELECT 'r' FROM dummy ) ) AND ( table1.pk <= table2.col_int_key AND table1.pk > table3.col_int_key ) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -23,7 +23,7 @@
           ],
-          "key": "col_varchar_key",
+          "key": "col_int_key",
           "used_key_parts": [
-            "col_varchar_key"
+            "col_int_key"
           ],
-          "key_length": "4",
+          "key_length": "5",
           "rows": 1,
@@ -67,3 +67,3 @@
           "filtered": 100,
-          "attached_condition": "(`test`.`table1`.`pk` <= `table2`.`col_int_key`)",
+          "using_where": true,
           "materialized_from_subquery": {
@@ -124,3 +124,3 @@
                     "filtered": 100,
-                    "attached_condition": "<if>(is_not_null_compl(subquery1_t3..subquery1_t2), (`test`.`subquery1_t3`.`col_int_key` = `test`.`subquery1_t2`.`col_int_key`), true)"
+                    "using_where": true
                   }
QUERY: SELECT    CONCAT( table2.col_varchar_key , table1.col_varchar_key ) AS field1 , table2.pk AS field2 , table1.pk AS field3 FROM ( cc AS table1 STRAIGHT_JOIN ( ( ( SELECT  SQL_SMALL_RESULT subquery1_t2.* FROM ( cc AS subquery1_t1 RIGHT OUTER JOIN bb AS subquery1_t2 ON (subquery1_t2.col_int_nokey = subquery1_t1.pk  ) )  ) AS table2 INNER JOIN cc AS table3 ON (table3.pk = table2.pk  ) ) ) ON (table3.col_int_key = table2.col_int_nokey  ) ) WHERE (   EXISTS (SELECT   subquery2_t1.col_int_nokey AS subquery2_field1 FROM ( c AS subquery2_t1 INNER JOIN ( c AS subquery2_t2 STRAIGHT_JOIN b AS subquery2_t3 ON (subquery2_t3.col_int_key = subquery2_t2.pk  AND subquery2_t2.col_int_key NOT IN (SELECT   child_subquery1_t1.col_int_nokey AS child_subquery1_field1 FROM ( cc AS child_subquery1_t1 LEFT  JOIN c AS child_subquery1_t2 ON (child_subquery1_t2.col_int_nokey = child_subquery1_t1.col_int_key ) )    ) ) ) ON (subquery2_t3.col_varchar_key = subquery2_t2.col_varchar_key  ) ) WHERE subquery2_t3.col_varchar_nokey <= table2.col_varchar_nokey AND subquery2_t3.pk <= table2.pk ) ) OR ( table3.col_varchar_nokey <= 'c' AND table2.col_varchar_key != table2.col_varchar_nokey ) ORDER BY table1.col_varchar_key /*+JavaDB:Postgres: NULLS FIRST*/ , table1 .pk DESC /*+JavaDB:Postgres: NULLS LAST */, field1 /*+JavaDB:Postgres: NULLS FIRST */, field2 /*+JavaDB:Postgres: NULLS FIRST */, field3 /*+JavaDB:Postgres: NULLS FIRST */ 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -29,4 +29,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "(exists(/* select#3 */ select `test`.`subquery2_t1`.`col_int_nokey` AS `subquery2_field1` from `test`.`c` `subquery2_t1` join `test`.`c` `subquery2_t2` straight_join `test`.`b` `subquery2_t3` where ((`test`.`subquery2_t3`.`col_int_key` = `test`.`subquery2_t2`.`pk`) and (`test`.`subquery2_t3`.`col_varchar_key` = `test`.`subquery2_t2`.`col_varchar_key`) and (`test`.`subquery2_t3`.`col_varchar_nokey` <= `table2`.`col_varchar_nokey`) and (`test`.`subquery2_t3`.`pk` <= `table2`.`pk`) and (not(<in_optimizer>(`test`.`subquery2_t2`.`col_int_key`,`test`.`subquery2_t2`.`col_int_key` in ( <materialize> (/* select#4 */ select `test`.`child_subquery1_t1`.`col_int_nokey` AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` left join `test`.`c` `child_subquery1_t2` on((`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`)) where 1 having 1 ), <primary_index_lookup>(`test`.`subquery2_t2`.`col_int_key` in <temporary table> on <auto_key> where ((`test`.`subquery2_t2`.`col_int_key` = `materialized-subquery`.`child_subquery1_field1`))))))))) or (`table2`.`col_varchar_key` <> `table2`.`col_varchar_nokey`))",
             "attached_subqueries": [
@@ -62,5 +62,5 @@
                         "filtered": 100,
+                        "using_where": true,
                         "using_index": true,
                         "using_join_buffer": "Block Nested Loop",
-                        "attached_condition": "(not(<in_optimizer>(`test`.`subquery2_t2`.`col_int_key`,`test`.`subquery2_t2`.`col_int_key` in ( <materialize> (/* select#4 */ select `test`.`child_subquery1_t1`.`col_int_nokey` AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` left join `test`.`c` `child_subquery1_t2` on((`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`)) where 1 having 1 ), <primary_index_lookup>(`test`.`subquery2_t2`.`col_int_key` in <temporary table> on <auto_key> where ((`test`.`subquery2_t2`.`col_int_key` = `materialized-subquery`.`child_subquery1_field1`)))))))",
                         "attached_subqueries": [
@@ -94,4 +94,4 @@
                                         "filtered": 100,
-                                        "using_join_buffer": "Block Nested Loop",
-                                        "attached_condition": "<if>(is_not_null_compl(child_subquery1_t2), (`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`), true)"
+                                        "using_where": true,
+                                        "using_join_buffer": "Block Nested Loop"
                                       }
@@ -182,3 +182,3 @@
             "filtered": 100,
-            "attached_condition": "((`test`.`table3`.`col_int_key` = `table2`.`col_int_nokey`) and (exists(/* select#3 */ select `test`.`subquery2_t1`.`col_int_nokey` AS `subquery2_field1` from `test`.`c` `subquery2_t1` join `test`.`c` `subquery2_t2` straight_join `test`.`b` `subquery2_t3` where ((`test`.`subquery2_t3`.`col_int_key` = `test`.`subquery2_t2`.`pk`) and (`test`.`subquery2_t3`.`col_varchar_key` = `test`.`subquery2_t2`.`col_varchar_key`) and (`test`.`subquery2_t3`.`col_varchar_nokey` <= `table2`.`col_varchar_nokey`) and (`test`.`subquery2_t3`.`pk` <= `table2`.`pk`) and (not(<in_optimizer>(`test`.`subquery2_t2`.`col_int_key`,`test`.`subquery2_t2`.`col_int_key` in ( <materialize> (/* select#4 */ select `test`.`child_subquery1_t1`.`col_int_nokey` AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` left join `test`.`c` `child_subquery1_t2` on((`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`)) where 1 having 1 ), <primary_index_lookup>(`test`.`subquery2_t2`.`col_int_key` in <temporary table> on <auto_key> where ((`test`.`subquery2_t2`.`col_int_key` = `materialized-subquery`.`child_subquery1_field1`))))))))) or ((`test`.`table3`.`col_varchar_nokey` <= 'c') and (`table2`.`col_varchar_key` <> `table2`.`col_varchar_nokey`))))",
+            "using_where": true,
             "attached_subqueries": [
@@ -214,5 +214,5 @@
                         "filtered": 100,
+                        "using_where": true,
                         "using_index": true,
                         "using_join_buffer": "Block Nested Loop",
-                        "attached_condition": "(not(<in_optimizer>(`test`.`subquery2_t2`.`col_int_key`,`test`.`subquery2_t2`.`col_int_key` in ( <materialize> (/* select#4 */ select `test`.`child_subquery1_t1`.`col_int_nokey` AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` left join `test`.`c` `child_subquery1_t2` on((`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`)) where 1 having 1 ), <primary_index_lookup>(`test`.`subquery2_t2`.`col_int_key` in <temporary table> on <auto_key> where ((`test`.`subquery2_t2`.`col_int_key` = `materialized-subquery`.`child_subquery1_field1`)))))))",
                         "attached_subqueries": [
@@ -246,4 +246,4 @@
                                         "filtered": 100,
-                                        "using_join_buffer": "Block Nested Loop",
-                                        "attached_condition": "<if>(is_not_null_compl(child_subquery1_t2), (`test`.`child_subquery1_t2`.`col_int_nokey` = `test`.`child_subquery1_t1`.`col_int_key`), true)"
+                                        "using_where": true,
+                                        "using_join_buffer": "Block Nested Loop"
                                       }
QUERY: SELECT     (SELECT   MAX( DISTINCT sq1_alias1.col_int_key ) AS sq1_field1 FROM ( cc AS sq1_alias1 , bb AS sq1_alias2 ) WHERE sq1_alias2.pk <> alias1.pk AND sq1_alias2.pk <= alias1.col_int_key ) AS field1 , COUNT(  alias1.col_varchar_key ) AS field2 FROM ( bb AS alias1 LEFT OUTER JOIN ( ( cc AS alias2 INNER JOIN cc AS alias3 ON (alias3.col_int_key = alias2.col_int_key  ) ) ) ON (alias3.col_varchar_nokey = alias2.col_varchar_key  ) ) WHERE (   EXISTS ( (SELECT   sq2_alias1.col_varchar_nokey AS sq2_field1 FROM c AS sq2_alias1 WHERE  ( sq2_alias1.col_varchar_nokey , sq2_alias1.col_varchar_nokey )  IN (SELECT   c_sq1_alias1.col_varchar_key AS c_sq1_field1 , MAX(  c_sq1_alias1.col_varchar_nokey ) AS c_sq1_field2 FROM cc AS c_sq1_alias1    ) GROUP BY sq2_field1 ) ) ) OR ( alias1.col_int_key > 51 AND alias1.col_int_key < ( 51 + 209 ) OR alias1.col_int_key > 51 AND alias1.col_int_key < ( 51 + 159 ) ) OR  (SELECT  SQL_SMALL_RESULT MIN(  sq3_alias1.pk ) AS sq3_field1 FROM ( c AS sq3_alias1 RIGHT OUTER JOIN c AS sq3_alias2 ON (sq3_alias2.col_int_key = sq3_alias1.pk  ) )  ) IS NOT NULL  GROUP BY field1 HAVING field2 <> 5 ORDER BY alias1.col_time_key ASC , field2  , CONCAT( alias2.col_varchar_key, alias3.col_varchar_key )
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -54,3 +54,3 @@
               "filtered": 100,
-              "attached_condition": "<if>(is_not_null_compl(alias2..alias3), (`test`.`alias3`.`col_varchar_nokey` = `test`.`alias2`.`col_varchar_key`), true)"
+              "using_where": true
             }
@@ -79,4 +79,4 @@
                     "filtered": 100,
-                    "using_index": true,
-                    "attached_condition": "((`test`.`sq1_alias2`.`pk` <> `test`.`alias1`.`pk`) and (`test`.`sq1_alias2`.`pk` <= `test`.`alias1`.`col_int_key`))"
+                    "using_where": true,
+                    "using_index": true
                   }
@@ -158,3 +158,3 @@
                   "filtered": 100,
-                  "attached_condition": "<in_optimizer>((`test`.`sq2_alias1`.`col_varchar_nokey`,`test`.`sq2_alias1`.`col_varchar_nokey`),(`test`.`sq2_alias1`.`col_varchar_nokey`,`test`.`sq2_alias1`.`col_varchar_nokey`) in ( <materialize> (/* select#4 */ select `test`.`c_sq1_alias1`.`col_varchar_key` AS `c_sq1_field1`,max(`test`.`c_sq1_alias1`.`col_varchar_nokey`) AS `c_sq1_field2` from `test`.`cc` `c_sq1_alias1` having 1 ), <primary_index_lookup>(`test`.`sq2_alias1`.`col_varchar_nokey` in <temporary table> on <auto_key> where ((`test`.`sq2_alias1`.`col_varchar_nokey` = `materialized-subquery`.`c_sq1_field1`) and (`test`.`sq2_alias1`.`col_varchar_nokey` = `materialized-subquery`.`c_sq1_field2`)))))",
+                  "using_where": true,
                   "attached_subqueries": [
QUERY: SELECT     (SELECT 5 FROM dummy ) AS field1 FROM ( b AS table1 INNER JOIN ( ( ( SELECT   subquery2_t1.* FROM ( cc AS subquery2_t1 INNER JOIN cc AS subquery2_t2 ON (subquery2_t2.col_varchar_key = subquery2_t1.col_varchar_key  ) )  ) AS table2 LEFT  JOIN cc AS table3 ON (table3.col_int_key = table2.pk  ) ) ) ON (table3.col_varchar_key = table2.col_varchar_key  ) ) WHERE (   EXISTS ( (SELECT   subquery3_t2.col_varchar_nokey AS subquery3_field1 FROM ( d AS subquery3_t1 INNER JOIN bb AS subquery3_t2 ON (subquery3_t2.col_int_key = subquery3_t1.pk  ) )   ) ) ) OR ( table1.col_varchar_key = 'w' AND table1.col_varchar_key = table3.col_varchar_key ) ORDER BY table1.col_varchar_key DESC /*+JavaDB:Postgres: NULLS LAST */ , field1 /*+JavaDB:Postgres: NULLS FIRST */ LIMIT 10 OFFSET 6
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -46,3 +46,3 @@
                       "filtered": 100,
-                      "attached_condition": "(`test`.`subquery2_t1`.`col_varchar_key` is not null)"
+                      "using_where": true
                     }
@@ -92,3 +92,3 @@
             "filtered": 100,
-            "attached_condition": "(`test`.`table3`.`col_varchar_key` = `table2`.`col_varchar_key`)"
+            "using_where": true
           }
@@ -112,3 +112,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`subquery3_t2`.`col_int_key` is not null)"
+                  "using_where": true
                 }
QUERY: SELECT    alias1.col_time_key AS field1 , alias2.col_varchar_key AS field2 FROM ( b AS alias1 , ( SELECT   sq1_alias1.* FROM cc AS sq1_alias1  ) AS alias2 , c AS alias3 ) WHERE (   EXISTS ( (SELECT 5 FROM DUAL ) ) ) OR ( alias1.col_varchar_key  IN ('e' , 'USA') OR alias1.col_varchar_key  IN ('USA') )  GROUP BY field1, field2 HAVING field2 > 'e' 
STATUS: EQUAL
QUERY: SELECT     (SELECT 'z' FROM dummy ) AS field1 , table1.pk AS field2 , table1.col_time_key AS field3 , table2.col_datetime_key AS field4 , table1.col_datetime_key AS field5 , table2.pk AS field6 FROM ( ( SELECT   subquery2_t1.* FROM ( c AS subquery2_t1 INNER JOIN cc AS subquery2_t2 ON (subquery2_t2.pk = subquery2_t1.pk  ) )  ) AS table1 INNER JOIN ( SELECT   subquery3_t1.* FROM ( b AS subquery3_t1 LEFT  JOIN c AS subquery3_t2 ON (subquery3_t2.pk = subquery3_t1.pk  ) )  ) AS table2 ON (table2.pk = table1.col_int_key  ) ) WHERE (   EXISTS ( (SELECT   subquery4_t1.col_varchar_key AS subquery4_field1 FROM ( cc AS subquery4_t1 LEFT OUTER JOIN c AS subquery4_t2 ON (subquery4_t2.pk = subquery4_t1.col_int_key  ) )   ) ) ) OR ( table1.pk = 141 AND table1.pk = 79 ) ORDER BY table1.col_datetime_key DESC /*+JavaDB:Postgres: NULLS LAST */
STATUS: EQUAL
QUERY: SELECT    alias1.col_int_key AS field1 , alias2.col_varchar_key AS field2 FROM ( c AS alias1 , ( SELECT   sq1_alias1.* FROM ( cc AS sq1_alias1 RIGHT  JOIN b AS sq1_alias2 ON (sq1_alias2.col_int_key = sq1_alias1.pk  ) )  ) AS alias2 , ( SELECT   sq2_alias1.* FROM ( cc AS sq2_alias1 INNER JOIN c AS sq2_alias2 ON (sq2_alias2.pk = sq2_alias1.pk  ) )  ) AS alias3 ) WHERE  alias3.col_int_key  IN (SELECT   sq3_alias1.col_int_key AS sq3_field1 FROM ( c AS sq3_alias1 , c AS sq3_alias2 )    )  HAVING ((field1 = 'z' OR field2 < 235) AND field1 != 1) ORDER BY alias1.col_varchar_key DESC
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -26,4 +26,4 @@
                   "filtered": 100,
-                  "using_index": true,
-                  "attached_condition": "(`test`.`sq3_alias1`.`col_int_key` is not null)"
+                  "using_where": true,
+                  "using_index": true
                 }
QUERY: SELECT  STRAIGHT_JOIN  table1.pk AS field1 FROM ( c AS table1 INNER JOIN ( ( c AS table2 INNER JOIN ( SELECT   subquery1_t1.* FROM ( bb AS subquery1_t1 STRAIGHT_JOIN cc AS subquery1_t2 ON (subquery1_t2.pk = subquery1_t1.col_int_nokey  ) ) WHERE ( subquery1_t2.col_varchar_key < 'x' AND subquery1_t1.col_int_nokey != subquery1_t2.pk ) ) AS table3 ON (table3.pk = table2.col_int_key  AND table2.col_int_key = (SELECT   MIN(  subquery2_t1.col_int_nokey ) AS subquery2_field1 FROM ( cc AS subquery2_t1 INNER JOIN cc AS subquery2_t2 ON (subquery2_t2.pk = subquery2_t1.col_int_nokey  ) )  ) ) ) ) ON (table3.col_varchar_key = table2.col_varchar_nokey  ) ) WHERE (  table1.pk = ALL (SELECT 25 FROM dummy UNION SELECT 2 FROM dummy ) ) AND ( table1.col_varchar_key NOT IN ('z', 'n') OR table1.pk > 67 AND table1.pk < ( 67 + 32 ) ) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -19,3 +19,3 @@
                 "filtered": 100,
-                "attached_condition": "((`test`.`subquery1_t1`.`col_int_nokey` <> `test`.`subquery1_t1`.`col_int_nokey`) and (`test`.`subquery1_t1`.`col_int_nokey` is not null))"
+                "using_where": true
               }
@@ -40,3 +40,3 @@
                 "filtered": 100,
-                "attached_condition": "(`test`.`subquery1_t2`.`col_varchar_key` < 'x')"
+                "using_where": true
               }
@@ -67,3 +67,3 @@
                     "filtered": 100,
-                    "attached_condition": "(<cache>(`test`.`table1`.`pk`) <> 25)"
+                    "using_where": true
                   }
@@ -81,3 +81,3 @@
                     "filtered": 100,
-                    "attached_condition": "(<cache>(`test`.`table1`.`pk`) <> 2)"
+                    "using_where": true
                   }
@@ -101,3 +101,3 @@
                 "filtered": 100,
-                "attached_condition": "(`test`.`subquery2_t1`.`col_int_nokey` is not null)"
+                "using_where": true
               }
QUERY: SELECT   SQL_SMALL_RESULT table2.col_varchar_key AS field1 , table2.col_time_key AS field2 , table1.col_time_key AS field3 , table1.col_datetime_key AS field4 , ( ( table1.col_int_key ) - ( table1.pk ) ) AS field5 FROM ( cc AS table1 STRAIGHT_JOIN a AS table2 ON (table2.col_int_key = table1.col_int_nokey  ) ) WHERE (   EXISTS ( (SELECT   subquery1_t1.col_varchar_key AS subquery1_field1 FROM ( c AS subquery1_t1 LEFT  JOIN b AS subquery1_t2 ON (subquery1_t2.col_int_nokey = subquery1_t1.pk  AND subquery1_t1.pk NOT IN (SELECT   child_subquery1_t1.col_int_key AS child_subquery1_field1 FROM b AS child_subquery1_t1    ) ) )  GROUP BY subquery1_field1 ) ) ) AND table2.col_varchar_key >= table1.col_varchar_key ORDER BY table1.col_date_key DESC /*+JavaDB:Postgres: NULLS LAST */ , field1 /*+JavaDB:Postgres: NULLS FIRST */, field2 /*+JavaDB:Postgres: NULLS FIRST */, field3 /*+JavaDB:Postgres: NULLS FIRST */, field4 /*+JavaDB:Postgres: NULLS FIRST */, field5 /*+JavaDB:Postgres: NULLS FIRST */ 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -22,3 +22,3 @@
             "table_name": "table2",
-            "access_type": "ALL",
+            "access_type": "range",
             "possible_keys": [
@@ -27,2 +27,7 @@
             ],
+            "key": "col_int_key",
+            "used_key_parts": [
+              "col_int_key"
+            ],
+            "key_length": "5",
             "rows": 1,
@@ -63,4 +68,4 @@
                     "filtered": 100,
+                    "using_where": true,
                     "using_join_buffer": "Block Nested Loop",
-                    "attached_condition": "(<if>(is_not_null_compl(subquery1_t2), (not(<in_optimizer>(`test`.`subquery1_t1`.`pk`,`test`.`subquery1_t1`.`pk` in ( <materialize> (/* select#3 */ select `test`.`child_subquery1_t1`.`col_int_key` AS `child_subquery1_field1` from `test`.`b` `child_subquery1_t1` where 1 having 1 ), <primary_index_lookup>(`test`.`subquery1_t1`.`pk` in <temporary table> on <auto_key> where ((`test`.`subquery1_t1`.`pk` = `materialized-subquery`.`child_subquery1_field1`))))))), true) and <if>(is_not_null_compl(subquery1_t2), (`test`.`subquery1_t2`.`col_int_nokey` = `test`.`subquery1_t1`.`pk`), true))",
                     "attached_subqueries": [
QUERY: SELECT   SQL_SMALL_RESULT table2.col_varchar_key AS field1 FROM ( c AS table1 LEFT OUTER JOIN cc AS table2 ON (table2.col_int_key = table1.pk  ) ) WHERE (  table2.col_varchar_nokey != ANY (SELECT  SQL_SMALL_RESULT subquery1_t1.col_varchar_key AS subquery1_field1 FROM ( c AS subquery1_t1 LEFT OUTER JOIN c AS subquery1_t2 ON (subquery1_t2.col_int_key = subquery1_t1.col_int_key  OR subquery1_t2.col_int_key = (SELECT   MIN(  child_subquery1_t2.pk ) AS child_subquery1_field1 FROM ( c AS child_subquery1_t1 INNER JOIN c AS child_subquery1_t2 ON (child_subquery1_t2.col_int_key = child_subquery1_t1.pk ) ) WHERE child_subquery1_t2.col_varchar_nokey = child_subquery1_t2.col_varchar_key ) ) ) WHERE subquery1_t2.pk >= table1.col_int_nokey ) ) AND ( table1.pk NOT IN (226, 126) OR table1.col_int_key > 241 AND table1.col_int_key < ( 241 + 133 ) ) OR ( table2.col_varchar_key <> 'a' OR table1.col_int_key < table1.pk ) 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -34,3 +34,3 @@
           "filtered": 100,
-          "attached_condition": "<if>(found_match(table2), ((<nop>(<in_optimizer>(`test`.`table2`.`col_varchar_nokey`,<exists>(/* select#2 */ select sql_small_result 1 from `test`.`c` `subquery1_t1` join `test`.`c` `subquery1_t2` where ((`test`.`subquery1_t2`.`pk` >= `test`.`table1`.`col_int_nokey`) and <if>(outer_field_is_not_null, ((<cache>(`test`.`table2`.`col_varchar_nokey`) <> `test`.`subquery1_t1`.`col_varchar_key`) or isnull(`test`.`subquery1_t1`.`col_varchar_key`)), true) and ((`test`.`subquery1_t2`.`col_int_key` = `test`.`subquery1_t1`.`col_int_key`) or (`test`.`subquery1_t2`.`col_int_key` = (/* select#3 */ select min(`test`.`child_subquery1_t2`.`pk`) AS `child_subquery1_field1` from `test`.`c` `child_subquery1_t1` join `test`.`c` `child_subquery1_t2` where ((`test`.`child_subquery1_t2`.`col_int_key` = `test`.`child_subquery1_t1`.`pk`) and (`test`.`child_subquery1_t2`.`col_varchar_key` = `test`.`child_subquery1_t2`.`col_varchar_nokey`)))))) having <if>(outer_field_is_not_null, <is_not_null_test>(`test`.`subquery1_t1`.`col_varchar_key`), true)))) and ((`test`.`table1`.`pk` not in (226,126)) or ((`test`.`table1`.`col_int_key` > 241) and (`test`.`table1`.`col_int_key` < <cache>((241 + 133)))))) or (`test`.`table2`.`col_varchar_key` <> 'a') or (`test`.`table1`.`col_int_key` < `test`.`table1`.`pk`)), true)",
+          "using_where": true,
           "attached_subqueries": [
@@ -57,4 +57,4 @@
                       "filtered": 100,
-                      "using_index": true,
-                      "attached_condition": "<if>(outer_field_is_not_null, ((<cache>(`test`.`table2`.`col_varchar_nokey`) <> `test`.`subquery1_t1`.`col_varchar_key`) or isnull(`test`.`subquery1_t1`.`col_varchar_key`)), true)"
+                      "using_where": true,
+                      "using_index": true
                     }
@@ -64,3 +64,3 @@
                       "table_name": "subquery1_t2",
-                      "access_type": "ALL",
+                      "access_type": "range",
                       "possible_keys": [
@@ -69,5 +69,12 @@
                       ],
-                      "rows": 20,
-                      "filtered": 100,
+                      "key": "col_int_key",
+                      "used_key_parts": [
+                        "col_int_key",
+                        "pk"
+                      ],
+                      "key_length": "9",
+                      "rows": 6,
+                      "filtered": 333.33,
                       "range_checked_for_each_record": "index map: 0x3",
+                      "using_index": true,
                       "attached_subqueries": [
@@ -113,3 +120,3 @@
                                   "filtered": 100,
-                                  "attached_condition": "(`test`.`child_subquery1_t2`.`col_varchar_key` = `test`.`child_subquery1_t2`.`col_varchar_nokey`)"
+                                  "using_where": true
                                 }
QUERY: SELECT    alias1.col_varchar_key AS field1 FROM ( ( SELECT   sq1_alias1.* FROM ( view_cc AS sq1_alias1 , cc AS sq1_alias2 ) WHERE sq1_alias1.pk < sq1_alias2.col_int_nokey ) AS alias1 RIGHT OUTER JOIN c AS alias2 ON (alias2.col_varchar_nokey = alias1.col_varchar_key  ) ) WHERE (   EXISTS ( (SELECT   sq2_alias1.col_varchar_nokey AS sq2_field1 FROM ( c AS sq2_alias1 , cc AS sq2_alias2 )   ) ) ) AND alias1.col_int_key = 108  HAVING field1 < 'o' ORDER BY alias1.col_date_key , alias2 .pk ASC, field1 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -43,3 +43,3 @@
                       "table_name": "cc",
-                      "access_type": "ALL",
+                      "access_type": "range",
                       "possible_keys": [
@@ -47,4 +47,9 @@
                       ],
-                      "rows": 20,
-                      "filtered": 100,
+                      "key": "PRIMARY",
+                      "used_key_parts": [
+                        "pk"
+                      ],
+                      "key_length": "4",
+                      "rows": 1,
+                      "filtered": 2000,
                       "range_checked_for_each_record": "index map: 0x1"
@@ -63,4 +68,4 @@
             "filtered": 100,
-            "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "(`test`.`alias2`.`col_varchar_nokey` = `alias1`.`col_varchar_key`)"
+            "using_where": true,
+            "using_join_buffer": "Block Nested Loop"
           }
QUERY: SELECT    table2.pk AS field1 FROM ( ( SELECT   subquery1_t1.* FROM ( cc AS subquery1_t1 INNER JOIN c AS subquery1_t2 ON (subquery1_t2.col_varchar_key = subquery1_t1.col_varchar_key  ) ) WHERE (  NOT EXISTS (SELECT   child_subquery1_t2.col_varchar_nokey AS child_subquery1_field1 FROM ( cc AS child_subquery1_t1 INNER JOIN c AS child_subquery1_t2 ON (child_subquery1_t2.pk = child_subquery1_t1.pk ) ) WHERE child_subquery1_t2.col_int_nokey <> subquery1_t1.pk ) OR subquery1_t2.col_varchar_key >= 'c' ) ) AS table1 INNER JOIN cc AS table2 ON (table2.col_int_nokey = table1.col_int_key  ) ) WHERE (  table2.col_varchar_key > (SELECT 'r' FROM dummy ) ) AND table1.col_int_key = 104 ORDER BY table1.col_time_key ASC /*+JavaDB:Postgres: NULLS FIRST */ , field1 /*+JavaDB:Postgres: NULLS FIRST */ LIMIT 1
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -41,3 +41,3 @@
                       "filtered": 100,
-                      "attached_condition": "(((not(exists(/* select#3 */ select `test`.`child_subquery1_t2`.`col_varchar_nokey` AS `child_subquery1_field1` from `test`.`cc` `child_subquery1_t1` join `test`.`c` `child_subquery1_t2` where ((`test`.`child_subquery1_t2`.`pk` = `test`.`child_subquery1_t1`.`pk`) and (`test`.`child_subquery1_t2`.`col_int_nokey` <> `test`.`subquery1_t1`.`pk`))))) or (`test`.`subquery1_t1`.`col_varchar_key` >= 'c')) and (`test`.`subquery1_t1`.`col_varchar_key` is not null))",
+                      "using_where": true,
                       "attached_subqueries": [
@@ -83,3 +83,3 @@
                                   "filtered": 100,
-                                  "attached_condition": "(`test`.`child_subquery1_t2`.`col_int_nokey` <> `test`.`subquery1_t1`.`pk`)"
+                                  "using_where": true
                                 }
@@ -131,4 +131,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "((`test`.`table2`.`col_int_nokey` = 104) and (`test`.`table2`.`col_varchar_key` > (/* select#4 */ select 'r' from `test`.`dummy`)))",
             "attached_subqueries": [
QUERY: SELECT    alias1.col_datetime_key AS field1 , alias1.col_datetime_key AS field2 FROM ( view_cc AS alias1 , cc AS alias2 , ( SELECT   sq1_alias1.* FROM bb AS sq1_alias1  ) AS alias3 ) WHERE (  NOT EXISTS (SELECT   sq2_alias1.col_int_nokey AS sq2_field1 FROM c AS sq2_alias1 WHERE sq2_alias1.col_varchar_key > alias2.col_varchar_nokey AND sq2_alias1.pk >= 8 ) ) AND alias1.col_varchar_key <> 'b'  HAVING field2 < 'b' ORDER BY alias1.col_time_key  , field1, field2 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -39,4 +39,4 @@
             "filtered": 95,
-            "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "(`test`.`cc`.`col_varchar_key` <> 'b')"
+            "using_where": true,
+            "using_join_buffer": "Block Nested Loop"
           }
@@ -49,4 +49,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "(not(exists(/* select#3 */ select `test`.`sq2_alias1`.`col_int_nokey` AS `sq2_field1` from `test`.`c` `sq2_alias1` where ((`test`.`sq2_alias1`.`col_varchar_key` > `test`.`alias2`.`col_varchar_nokey`) and (`test`.`sq2_alias1`.`pk` >= 8)))))",
             "attached_subqueries": [
@@ -59,3 +59,3 @@
                     "table_name": "sq2_alias1",
-                    "access_type": "range",
+                    "access_type": "ALL",
                     "possible_keys": [
@@ -63,9 +63,4 @@
                     ],
-                    "key": "PRIMARY",
-                    "used_key_parts": [
-                      "pk"
-                    ],
-                    "key_length": "4",
-                    "rows": 13,
-                    "filtered": 100,
+                    "rows": 20,
+                    "filtered": 65,
                     "range_checked_for_each_record": "index map: 0x20"
QUERY: SELECT    MAX(  alias1.pk ) AS field1 FROM ( ( SELECT DISTINCT  sq1_alias1.* FROM bb AS sq1_alias1  ) AS alias1 RIGHT OUTER JOIN ( SELECT   sq2_alias1.* FROM cc AS sq2_alias1 WHERE sq2_alias1.pk < sq2_alias1.col_int_nokey ) AS alias2 ON (alias2.col_varchar_key = alias1.col_varchar_nokey  ) ) WHERE  alias2.col_varchar_nokey > (SELECT   SUM(  sq3_alias1.col_varchar_key ) AS sq3_field1 FROM ( cc AS sq3_alias1 INNER JOIN b AS sq3_alias2 ON (sq3_alias2.col_varchar_key = sq3_alias1.col_varchar_key  AND sq3_alias2.pk > ALL (SELECT 7 UNION SELECT 7 ) ) )  )  HAVING ( ( 7, 8 ) NOT IN (SELECT   sq4_alias1.col_int_nokey AS sq4_field1 , MAX(  sq4_alias1.pk ) AS sq4_field2 FROM ( view_bb AS sq4_alias1 LEFT OUTER JOIN ( cc AS sq4_alias2 RIGHT  JOIN c AS sq4_alias3 ON (sq4_alias3.col_varchar_key = sq4_alias2.col_varchar_nokey  ) ) ON (sq4_alias3.col_varchar_key = sq4_alias2.col_varchar_key  ) )    ) AND field1 >= 2) ORDER BY alias1.col_int_key  , field1 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -13,3 +13,3 @@
             "filtered": 100,
-            "attached_condition": "(`alias2`.`col_varchar_nokey` > (/* select#4 */ select sum(`test`.`sq3_alias1`.`col_varchar_key`) AS `sq3_field1` from `test`.`cc` `sq3_alias1` join `test`.`b` `sq3_alias2` where ((`test`.`sq3_alias1`.`col_varchar_key` = `test`.`sq3_alias2`.`col_varchar_key`) and <not>((`test`.`sq3_alias2`.`pk` <= <max>(/* select#5 */ select 7 union /* select#6 */ select 7))))))",
+            "using_where": true,
             "attached_subqueries": [
@@ -36,4 +36,4 @@
                         "filtered": 100,
+                        "using_where": true,
                         "using_index": true,
-                        "attached_condition": "(<not>((`test`.`sq3_alias2`.`pk` <= <max>(/* select#5 */ select 7 union /* select#6 */ select 7))) and (`test`.`sq3_alias2`.`col_varchar_key` is not null))",
                         "attached_subqueries": [
@@ -106,3 +106,3 @@
                   "filtered": 100,
-                  "attached_condition": "(`test`.`sq2_alias1`.`pk` < `test`.`sq2_alias1`.`col_int_nokey`)"
+                  "using_where": true
                 }
@@ -118,4 +118,4 @@
             "filtered": 100,
+            "using_where": true,
             "using_join_buffer": "Block Nested Loop",
-            "attached_condition": "<if>(is_not_null_compl(alias1), (`alias1`.`col_varchar_nokey` = `alias2`.`col_varchar_key`), true)",
             "materialized_from_subquery": {
@@ -183,4 +183,4 @@
                   "filtered": 100,
-                  "using_index": true,
-                  "attached_condition": "<if>(is_not_null_compl(sq4_alias2..sq4_alias3), (`test`.`sq4_alias3`.`col_varchar_key` = `test`.`sq4_alias2`.`col_varchar_nokey`), true)"
+                  "using_where": true,
+                  "using_index": true
                 }
QUERY: SELECT    alias1.col_date_key AS field1 FROM ( ( SELECT   sq1_alias1.* FROM b AS sq1_alias1  ) AS alias1 LEFT OUTER JOIN d AS alias2 ON (alias2.col_varchar_key = alias1.col_varchar_key  ) ) WHERE (  alias1.col_varchar_nokey >= SOME (SELECT   sq2_alias1.col_varchar_key AS sq2_field1 FROM cc AS sq2_alias1 WHERE sq2_alias1.col_varchar_nokey <> alias2.col_varchar_key AND sq2_alias1.col_varchar_nokey != alias2.col_varchar_nokey ) ) AND  alias1.col_int_nokey < ANY (SELECT 7 UNION SELECT 3 )  HAVING field1 >= 1 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -11,3 +11,3 @@
           "filtered": 100,
-          "attached_condition": "<nop>((`alias1`.`col_int_nokey` < <max>(/* select#4 */ select 7 union /* select#5 */ select 3)))",
+          "using_where": true,
           "attached_subqueries": [
@@ -76,3 +76,3 @@
           "filtered": 100,
-          "attached_condition": "<if>(found_match(alias2), <nop>(<in_optimizer>(`alias1`.`col_varchar_nokey`,<exists>(/* select#3 */ select 1 from `test`.`cc` `sq2_alias1` where ((`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias2`.`col_varchar_key`) and (`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias2`.`col_varchar_nokey`) and <if>(outer_field_is_not_null, ((<cache>(`alias1`.`col_varchar_nokey`) >= `test`.`sq2_alias1`.`col_varchar_key`) or isnull(`test`.`sq2_alias1`.`col_varchar_key`)), true)) having <if>(outer_field_is_not_null, <is_not_null_test>(`test`.`sq2_alias1`.`col_varchar_key`), true)))), true)",
+          "using_where": true,
           "attached_subqueries": [
@@ -88,3 +88,3 @@
                   "filtered": 100,
-                  "attached_condition": "((`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias2`.`col_varchar_key`) and (`test`.`sq2_alias1`.`col_varchar_nokey` <> `test`.`alias2`.`col_varchar_nokey`) and <if>(outer_field_is_not_null, ((<cache>(`alias1`.`col_varchar_nokey`) >= `test`.`sq2_alias1`.`col_varchar_key`) or isnull(`test`.`sq2_alias1`.`col_varchar_key`)), true))"
+                  "using_where": true
                 }
QUERY: SELECT    COUNT(  alias1.col_varchar_nokey ) AS field1 FROM ( cc AS alias1 INNER JOIN ( ( b AS alias2 RIGHT OUTER JOIN ( SELECT   sq1_alias1.* FROM ( b AS sq1_alias1 , cc AS sq1_alias2 )  ) AS alias3 ON (alias3.col_varchar_key = alias2.col_varchar_key  ) ) ) ON (alias3.col_varchar_key = alias2.col_varchar_key  ) ) WHERE  alias2.col_varchar_nokey <= ANY (SELECT 'z' UNION DISTINCT SELECT 'l' )  HAVING (field1 <> 'j' AND field1 >= 'wr') ORDER BY field1 DESC , alias1.col_int_key  , alias1.col_datetime_key DESC
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -16,3 +16,3 @@
             "filtered": 100,
-            "attached_condition": "(<nop>((`test`.`alias2`.`col_varchar_nokey` <= <max>(/* select#3 */ select 'z' union /* select#4 */ select 'l'))) and (`test`.`alias2`.`col_varchar_key` is not null))",
+            "using_where": true,
             "attached_subqueries": [
QUERY: SELECT DISTINCT   alias2.col_varchar_nokey AS field1 , alias1.col_date_key AS field2 , alias2.col_datetime_key AS field3 , alias2.col_date_key AS field4 , alias2.col_varchar_key AS field5 , alias2.col_int_key AS field6 FROM ( cc AS alias1 INNER JOIN ( SELECT DISTINCT  sq1_alias1.* FROM ( cc AS sq1_alias1 INNER JOIN c AS sq1_alias2 ON (sq1_alias2.pk = sq1_alias1.col_int_nokey  ) ) WHERE ( sq1_alias2.pk < sq1_alias2.col_int_nokey OR  sq1_alias2.col_varchar_key > SOME (SELECT 1 UNION DISTINCT SELECT 5 ) ) ) AS alias2 ON (alias2.col_varchar_key = alias1.col_varchar_key  ) ) WHERE   EXISTS ( (SELECT   sq2_alias1.col_int_nokey AS sq2_field1 FROM ( c AS sq2_alias1 , view_c AS sq2_alias2 )    ) )  GROUP BY field1, field2, field3, field4, field5, field6 HAVING field4 <> 3 ORDER BY field2  , alias1.col_datetime_key 
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -18,3 +18,3 @@
                 "filtered": 100,
-                "attached_condition": "(`alias2`.`col_varchar_key` is not null)",
+                "using_where": true,
                 "materialized_from_subquery": {
@@ -35,3 +35,3 @@
                             "filtered": 100,
-                            "attached_condition": "(`test`.`sq1_alias1`.`col_int_nokey` is not null)"
+                            "using_where": true
                           }
@@ -55,3 +55,3 @@
                             "filtered": 100,
-                            "attached_condition": "((`test`.`sq1_alias1`.`col_int_nokey` < `test`.`sq1_alias2`.`col_int_nokey`) or <nop>((`test`.`sq1_alias2`.`col_varchar_key` > <min>(/* select#3 */ select 1 union /* select#4 */ select 5))))",
+                            "using_where": true,
                             "attached_subqueries": [
QUERY: SELECT    CONCAT( table2.col_varchar_key , table2.col_varchar_nokey ) AS field1 FROM ( ( SELECT   subquery1_t1.* FROM ( c AS subquery1_t1 INNER JOIN bb AS subquery1_t2 ON (subquery1_t2.col_int_key = subquery1_t1.pk  OR subquery1_t1.col_int_nokey >= ALL (SELECT 3 FROM dummy UNION SELECT 4 FROM dummy ) ) ) WHERE  NOT EXISTS (SELECT  SQL_SMALL_RESULT child_subquery2_t1.col_int_key AS child_subquery1_field1 FROM ( a AS child_subquery2_t1 STRAIGHT_JOIN ( ( cc AS child_subquery2_t2 INNER JOIN c AS child_subquery2_t3 ON (child_subquery2_t3.col_varchar_key = child_subquery2_t2.col_varchar_nokey ) ) ) ON (child_subquery2_t3.col_int_nokey = child_subquery2_t2.pk ) ) WHERE child_subquery2_t1.pk <= subquery1_t2.col_int_key ) ) AS table1 INNER JOIN ( SELECT   subquery2_t1.* FROM c AS subquery2_t1  ) AS table2 ON (table2.pk = table1.pk  ) ) WHERE (  (SELECT  SQL_SMALL_RESULT SUM( DISTINCT subquery3_t1.col_int_key ) AS subquery3_field1 FROM ( bb AS subquery3_t1 INNER JOIN cc AS subquery3_t2 ON (subquery3_t2.col_varchar_key = subquery3_t1.col_varchar_nokey  ) )  ) IS  NULL ) AND ( table1.col_varchar_key  IN ('g', 'z', 'w', 'v', 't') OR table1.pk > 39 AND table1.pk < ( 39 + 233 ) ) OR table1.col_varchar_key IS  NULL ORDER BY table1.col_int_key ASC /*+JavaDB:Postgres: NULLS FIRST */ , field1 /*+JavaDB:Postgres: NULLS FIRST */ LIMIT 100
STATUS:NOT_EQUAL
SYNC_POINT:before_reset_query_plan
Diff: EXPLAIN NORMAL vs OTHER
@@ -14,3 +14,3 @@
             "filtered": 100,
-            "attached_condition": "((isnull((/* select#7 */ select sql_small_result sum(distinct `test`.`subquery3_t1`.`col_int_key`) AS `subquery3_field1` from `test`.`bb` `subquery3_t1` join `test`.`cc` `subquery3_t2` where (`test`.`subquery3_t2`.`col_varchar_key` = `test`.`subquery3_t1`.`col_varchar_nokey`))) and ((`table1`.`col_varchar_key` in ('g','z','w','v','t')) or ((`table1`.`pk` > 39) and (`table1`.`pk` < <cache>((39 + 233)))))) or isnull(`table1`.`col_varchar_key`))",
+            "using_where": true,
             "attached_subqueries": [
@@ -28,3 +28,3 @@
                         "filtered": 100,
-                        "attached_condition": "(`test`.`subquery3_t1`.`col_varchar_nokey` is not null)"
+                        "using_where": true
                       }
@@ -76,4 +76,4 @@
                       "filtered": 100,
+                      "using_where": true,
                       "using_index": true,
-                      "attached_condition": "(not(exists(/* select#5 */ select sql_small_result `test`.`child_subquery2_t1`.`col_int_key` AS `child_subquery1_field1` from `test`.`a` `child_subquery2_t1` join `test`.`cc` `child_subquery2_t2` join `test`.`c` `child_subquery2_t3` where ((`test`.`child_subquery2_t3`.`col_varchar_key` = `test`.`child_subquery2_t2`.`col_varchar_nokey`) and (`test`.`child_subquery2_t3`.`col_int_nokey` = `test`.`child_subquery2_t2`.`pk`) and (`test`.`child_subquery2_t1`.`pk` <= `test`.`subquery1_t2`.`col_int_key`)))))",
                       "attached_subqueries": [
@@ -106,4 +106,4 @@
                                   "filtered": 100,
-                                  "using_join_buffer": "Block Nested Loop",
-                                  "attached_condition": "(`test`.`child_subquery2_t2`.`col_varchar_nokey` is not null)"
+                                  "using_where": true,
+                                  "using_join_buffer": "Block Nested Loop"
                                 }
@@ -127,3 +127,3 @@
                                   "filtered": 100,
-                                  "attached_condition": "(`test`.`child_subquery2_t3`.`col_int_nokey` = `test`.`child_subquery2_t2`.`pk`)"
+                                  "using_where": true
                                 }
@@ -145,4 +145,4 @@
                       "filtered": 100,
+                      "using_where": true,
                       "using_join_buffer": "Block Nested Loop",
-                      "attached_condition": "((`test`.`subquery1_t1`.`pk` = `test`.`subquery1_t2`.`col_int_key`) or <not>((`test`.`subquery1_t1`.`col_int_nokey` < <max>(/* select#3 */ select 3 from `test`.`dummy` union /* select#4 */ select 4 from `test`.`dummy`))))",
                       "attached_subqueries": [
